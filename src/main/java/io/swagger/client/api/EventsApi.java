/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.InlineResponse20010;
import io.swagger.client.model.InlineResponse2007;
import io.swagger.client.model.InlineResponse2008;
import io.swagger.client.model.InlineResponse2009;
import io.swagger.client.model.Query1;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class EventsApi {
    private ApiClient apiClient;

    public EventsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public EventsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getBreakingEvents
     * @param apiKey Your API key (required)
     * @param breakingEventsCount Number of breaking events to return (at most 100) (optional, default to 100)
     * @param breakingEventsPage Page of the results to return (optional, default to 1)
     * @param breakingEventsMinBreakingScore Score of how much should event at least be \&quot;breaking\&quot; in order to return it. Minimum value is 0. (optional, default to 0.2)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getBreakingEventsCall(String apiKey, Integer breakingEventsCount, Integer breakingEventsPage, Double breakingEventsMinBreakingScore, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/event/getBreakingEvents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (breakingEventsCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("breakingEventsCount", breakingEventsCount));
        if (breakingEventsPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("breakingEventsPage", breakingEventsPage));
        if (breakingEventsMinBreakingScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("breakingEventsMinBreakingScore", breakingEventsMinBreakingScore));
        if (includeEventTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventTitle", includeEventTitle));
        if (includeEventSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSummary", includeEventSummary));
        if (includeEventSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSocialScore", includeEventSocialScore));
        if (includeEventSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSentiment", includeEventSentiment));
        if (includeEventLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventLocation", includeEventLocation));
        if (includeEventDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventDate", includeEventDate));
        if (includeEventArticleCounts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventArticleCounts", includeEventArticleCounts));
        if (includeEventConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventConcepts", includeEventConcepts));
        if (includeEventCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCategories", includeEventCategories));
        if (includeEventCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCommonDates", includeEventCommonDates));
        if (includeEventStories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventStories", includeEventStories));
        if (eventImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventImageCount", eventImageCount));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeStoryBasicStats != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryBasicStats", includeStoryBasicStats));
        if (includeStoryTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryTitle", includeStoryTitle));
        if (includeStoryLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryLocation", includeStoryLocation));
        if (includeStoryDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryDate", includeStoryDate));
        if (includeStoryConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryConcepts", includeStoryConcepts));
        if (includeStoryCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCategories", includeStoryCategories));
        if (includeStoryMedoidArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryMedoidArticle", includeStoryMedoidArticle));
        if (includeStoryCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCommonDates", includeStoryCommonDates));
        if (storyImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("storyImageCount", storyImageCount));
        if (includeCategoryParentUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeCategoryParentUri", includeCategoryParentUri));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getBreakingEventsValidateBeforeCall(String apiKey, Integer breakingEventsCount, Integer breakingEventsPage, Double breakingEventsMinBreakingScore, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getBreakingEvents(Async)");
        }
        
        com.squareup.okhttp.Call call = getBreakingEventsCall(apiKey, breakingEventsCount, breakingEventsPage, breakingEventsMinBreakingScore, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Retrieve the list of breaking events
     * Use this API endpoint to obtain a list of breaking events and their breaking score. The breaking events are events (a) that occured very recently, (b) for which we have collected many articles about them in a short time span and (c) for which the intensity of reporting is increasing.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-breaking-events)**. 
     * @param apiKey Your API key (required)
     * @param breakingEventsCount Number of breaking events to return (at most 100) (optional, default to 100)
     * @param breakingEventsPage Page of the results to return (optional, default to 1)
     * @param breakingEventsMinBreakingScore Score of how much should event at least be \&quot;breaking\&quot; in order to return it. Minimum value is 0. (optional, default to 0.2)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2008
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2008 getBreakingEvents(String apiKey, Integer breakingEventsCount, Integer breakingEventsPage, Double breakingEventsMinBreakingScore, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2008> resp = getBreakingEventsWithHttpInfo(apiKey, breakingEventsCount, breakingEventsPage, breakingEventsMinBreakingScore, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Retrieve the list of breaking events
     * Use this API endpoint to obtain a list of breaking events and their breaking score. The breaking events are events (a) that occured very recently, (b) for which we have collected many articles about them in a short time span and (c) for which the intensity of reporting is increasing.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-breaking-events)**. 
     * @param apiKey Your API key (required)
     * @param breakingEventsCount Number of breaking events to return (at most 100) (optional, default to 100)
     * @param breakingEventsPage Page of the results to return (optional, default to 1)
     * @param breakingEventsMinBreakingScore Score of how much should event at least be \&quot;breaking\&quot; in order to return it. Minimum value is 0. (optional, default to 0.2)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2008&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2008> getBreakingEventsWithHttpInfo(String apiKey, Integer breakingEventsCount, Integer breakingEventsPage, Double breakingEventsMinBreakingScore, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getBreakingEventsValidateBeforeCall(apiKey, breakingEventsCount, breakingEventsPage, breakingEventsMinBreakingScore, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2008>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve the list of breaking events (asynchronously)
     * Use this API endpoint to obtain a list of breaking events and their breaking score. The breaking events are events (a) that occured very recently, (b) for which we have collected many articles about them in a short time span and (c) for which the intensity of reporting is increasing.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-breaking-events)**. 
     * @param apiKey Your API key (required)
     * @param breakingEventsCount Number of breaking events to return (at most 100) (optional, default to 100)
     * @param breakingEventsPage Page of the results to return (optional, default to 1)
     * @param breakingEventsMinBreakingScore Score of how much should event at least be \&quot;breaking\&quot; in order to return it. Minimum value is 0. (optional, default to 0.2)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getBreakingEventsAsync(String apiKey, Integer breakingEventsCount, Integer breakingEventsPage, Double breakingEventsMinBreakingScore, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2008> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getBreakingEventsValidateBeforeCall(apiKey, breakingEventsCount, breakingEventsPage, breakingEventsMinBreakingScore, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2008>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getEvent
     * @param apiKey Your API key (required)
     * @param eventUri Specify the URI of the event you would like to see returned. (required)
     * @param resultType Define what kind of results you would like to get. Each result type corresponds to the prefix that&#x27;ll be used for other parameters. (optional, default to info)
     * @param articlesLang if resultType is &#x60;articles&#x60; then use this parameter if you wish to obtain only articles about the event in specific language(s). (optional)
     * @param articlesIncludeDuplicates if resultType is &#x60;articles&#x60; then set this value to &#x60;true&#x60; in order to return also articles that are copies of other articles (possibly from other news sources).  (optional, default to false)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleAuthors Set this parameter to true to include the article authors in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getEventCall(String apiKey, String eventUri, String resultType, List<String> articlesLang, Boolean articlesIncludeDuplicates, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleAuthors, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Integer articleBodyLen, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/event/getEvent";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (eventUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventUri", eventUri));
        if (resultType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("resultType", resultType));
        if (articlesLang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "articlesLang", articlesLang));
        if (articlesIncludeDuplicates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesIncludeDuplicates", articlesIncludeDuplicates));
        if (keyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "keyword", keyword));
        if (conceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "conceptUri", conceptUri));
        if (categoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "categoryUri", categoryUri));
        if (sourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceUri", sourceUri));
        if (sourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceLocationUri", sourceLocationUri));
        if (sourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceGroupUri", sourceGroupUri));
        if (authorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "authorUri", authorUri));
        if (locationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "locationUri", locationUri));
        if (lang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "lang", lang));
        if (dateStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateStart", dateStart));
        if (dateEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateEnd", dateEnd));
        if (dateMentionStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateMentionStart", dateMentionStart));
        if (dateMentionEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateMentionEnd", dateMentionEnd));
        if (keywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordLoc", keywordLoc));
        if (keywordOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordOper", keywordOper));
        if (conceptOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptOper", conceptOper));
        if (categoryOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("categoryOper", categoryOper));
        if (startSourceRankPercentile != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("startSourceRankPercentile", startSourceRankPercentile));
        if (endSourceRankPercentile != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("endSourceRankPercentile", endSourceRankPercentile));
        if (minSentimentArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("minSentimentArticle", minSentimentArticle));
        if (maxSentimentArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxSentimentArticle", maxSentimentArticle));
        if (includeEventTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventTitle", includeEventTitle));
        if (includeEventSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSummary", includeEventSummary));
        if (includeEventSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSocialScore", includeEventSocialScore));
        if (includeEventSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSentiment", includeEventSentiment));
        if (includeEventLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventLocation", includeEventLocation));
        if (includeEventDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventDate", includeEventDate));
        if (includeEventArticleCounts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventArticleCounts", includeEventArticleCounts));
        if (includeEventConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventConcepts", includeEventConcepts));
        if (includeEventCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCategories", includeEventCategories));
        if (includeEventCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCommonDates", includeEventCommonDates));
        if (includeEventStories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventStories", includeEventStories));
        if (eventImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventImageCount", eventImageCount));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (includeConceptTrendingScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptTrendingScore", includeConceptTrendingScore));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeStoryBasicStats != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryBasicStats", includeStoryBasicStats));
        if (includeStoryTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryTitle", includeStoryTitle));
        if (includeStoryLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryLocation", includeStoryLocation));
        if (includeStoryDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryDate", includeStoryDate));
        if (includeStoryConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryConcepts", includeStoryConcepts));
        if (includeStoryCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCategories", includeStoryCategories));
        if (includeStoryMedoidArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryMedoidArticle", includeStoryMedoidArticle));
        if (includeStoryCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCommonDates", includeStoryCommonDates));
        if (storyImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("storyImageCount", storyImageCount));
        if (includeArticleTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleTitle", includeArticleTitle));
        if (includeArticleBasicInfo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBasicInfo", includeArticleBasicInfo));
        if (includeArticleBody != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBody", includeArticleBody));
        if (includeArticleEventUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleEventUri", includeArticleEventUri));
        if (includeArticleSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSocialScore", includeArticleSocialScore));
        if (includeArticleSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSentiment", includeArticleSentiment));
        if (includeArticleConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleConcepts", includeArticleConcepts));
        if (includeArticleCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleCategories", includeArticleCategories));
        if (includeArticleLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLocation", includeArticleLocation));
        if (includeArticleImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleImage", includeArticleImage));
        if (includeArticleAuthors != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleAuthors", includeArticleAuthors));
        if (includeArticleVideos != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleVideos", includeArticleVideos));
        if (includeArticleLinks != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLinks", includeArticleLinks));
        if (includeArticleExtractedDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleExtractedDates", includeArticleExtractedDates));
        if (includeArticleDuplicateList != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleDuplicateList", includeArticleDuplicateList));
        if (includeArticleOriginalArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleOriginalArticle", includeArticleOriginalArticle));
        if (articleBodyLen != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articleBodyLen", articleBodyLen));
        if (includeSourceTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceTitle", includeSourceTitle));
        if (includeSourceDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceDescription", includeSourceDescription));
        if (includeSourceLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceLocation", includeSourceLocation));
        if (includeSourceRanking != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceRanking", includeSourceRanking));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getEventValidateBeforeCall(String apiKey, String eventUri, String resultType, List<String> articlesLang, Boolean articlesIncludeDuplicates, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleAuthors, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Integer articleBodyLen, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getEvent(Async)");
        }
        // verify the required parameter 'eventUri' is set
        if (eventUri == null) {
            throw new ApiException("Missing the required parameter 'eventUri' when calling getEvent(Async)");
        }
        
        com.squareup.okhttp.Call call = getEventCall(apiKey, eventUri, resultType, articlesLang, articlesIncludeDuplicates, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleAuthors, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, articleBodyLen, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Obtain details about a single event
     * The endpoint can be used to retrieve detailed information about a single event of interest. The event of interest should be provided with the &#x60;eventUri&#x60; parameter.  For each event you can retrieve multiple properties. The most common is retrieving the list of articles that discuss the event. Alternatively, you can also generate various summaries, by using some other &#x60;returnType&#x60; value. The &#x60;keywordAggr&#x60; return type will, for example, return the top keywords that are mentioned in the articles about the event.  If you would like retrieve only a subset of articles assigned to the event, you can do so by specifying one of the available filters (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, etc.).  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-event)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param eventUri Specify the URI of the event you would like to see returned. (required)
     * @param resultType Define what kind of results you would like to get. Each result type corresponds to the prefix that&#x27;ll be used for other parameters. (optional, default to info)
     * @param articlesLang if resultType is &#x60;articles&#x60; then use this parameter if you wish to obtain only articles about the event in specific language(s). (optional)
     * @param articlesIncludeDuplicates if resultType is &#x60;articles&#x60; then set this value to &#x60;true&#x60; in order to return also articles that are copies of other articles (possibly from other news sources).  (optional, default to false)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleAuthors Set this parameter to true to include the article authors in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2009
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2009 getEvent(String apiKey, String eventUri, String resultType, List<String> articlesLang, Boolean articlesIncludeDuplicates, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleAuthors, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Integer articleBodyLen, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2009> resp = getEventWithHttpInfo(apiKey, eventUri, resultType, articlesLang, articlesIncludeDuplicates, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleAuthors, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, articleBodyLen, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Obtain details about a single event
     * The endpoint can be used to retrieve detailed information about a single event of interest. The event of interest should be provided with the &#x60;eventUri&#x60; parameter.  For each event you can retrieve multiple properties. The most common is retrieving the list of articles that discuss the event. Alternatively, you can also generate various summaries, by using some other &#x60;returnType&#x60; value. The &#x60;keywordAggr&#x60; return type will, for example, return the top keywords that are mentioned in the articles about the event.  If you would like retrieve only a subset of articles assigned to the event, you can do so by specifying one of the available filters (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, etc.).  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-event)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param eventUri Specify the URI of the event you would like to see returned. (required)
     * @param resultType Define what kind of results you would like to get. Each result type corresponds to the prefix that&#x27;ll be used for other parameters. (optional, default to info)
     * @param articlesLang if resultType is &#x60;articles&#x60; then use this parameter if you wish to obtain only articles about the event in specific language(s). (optional)
     * @param articlesIncludeDuplicates if resultType is &#x60;articles&#x60; then set this value to &#x60;true&#x60; in order to return also articles that are copies of other articles (possibly from other news sources).  (optional, default to false)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleAuthors Set this parameter to true to include the article authors in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2009&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2009> getEventWithHttpInfo(String apiKey, String eventUri, String resultType, List<String> articlesLang, Boolean articlesIncludeDuplicates, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleAuthors, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Integer articleBodyLen, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getEventValidateBeforeCall(apiKey, eventUri, resultType, articlesLang, articlesIncludeDuplicates, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleAuthors, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, articleBodyLen, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2009>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Obtain details about a single event (asynchronously)
     * The endpoint can be used to retrieve detailed information about a single event of interest. The event of interest should be provided with the &#x60;eventUri&#x60; parameter.  For each event you can retrieve multiple properties. The most common is retrieving the list of articles that discuss the event. Alternatively, you can also generate various summaries, by using some other &#x60;returnType&#x60; value. The &#x60;keywordAggr&#x60; return type will, for example, return the top keywords that are mentioned in the articles about the event.  If you would like retrieve only a subset of articles assigned to the event, you can do so by specifying one of the available filters (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, etc.).  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-event)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param eventUri Specify the URI of the event you would like to see returned. (required)
     * @param resultType Define what kind of results you would like to get. Each result type corresponds to the prefix that&#x27;ll be used for other parameters. (optional, default to info)
     * @param articlesLang if resultType is &#x60;articles&#x60; then use this parameter if you wish to obtain only articles about the event in specific language(s). (optional)
     * @param articlesIncludeDuplicates if resultType is &#x60;articles&#x60; then set this value to &#x60;true&#x60; in order to return also articles that are copies of other articles (possibly from other news sources).  (optional, default to false)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleAuthors Set this parameter to true to include the article authors in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getEventAsync(String apiKey, String eventUri, String resultType, List<String> articlesLang, Boolean articlesIncludeDuplicates, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleAuthors, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Integer articleBodyLen, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2009> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getEventValidateBeforeCall(apiKey, eventUri, resultType, articlesLang, articlesIncludeDuplicates, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleAuthors, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, articleBodyLen, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2009>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getEvents
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to date)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-events#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param dateStart Limit the events to those that occured on or after this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param dateEnd Limit the events to those that occured before or on this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param minSentimentEvent the minimum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentEvent the maximum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @param reportingDateStart Limit the events to those for which the reporting date was on or after this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param reportingDateEnd Limit the events to those for which the reporting date was before or on this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore events in which news articles mention the specified keyword or phrase. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then events with articles that mention any of these keywords will be ignored. (optional)
     * @param ignoreConceptUri Ignore events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label. (optional)
     * @param ignoreCategoryUri Ignore events that are about a particular category. You can specify up to 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param ignoreSourceUri Ignore events that contain one or more articles that have been written by a news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param ignoreSourceLocationUri Ignore events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreSourceGroupUri Ignore events that contain one or more articles by news sources that are assigned to the specified group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param ignoreAuthorUri Ignore events that contain articles, which were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLocationUri Ignore events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param ignoreLang Ignore events that contain articles in the specified language(s). (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getEventsCall(String apiKey, List<String> resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Query1 query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, Integer minSentimentEvent, Integer maxSentimentEvent, Integer minArticlesInEvent, Integer maxArticlesInEvent, String reportingDateStart, String reportingDateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreAuthorUri, List<String> ignoreLocationUri, List<String> ignoreLang, String ignoreKeywordLoc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/event/getEvents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (resultType != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "resultType", resultType));
        if (eventsPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsPage", eventsPage));
        if (eventsCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsCount", eventsCount));
        if (eventsSortBy != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsSortBy", eventsSortBy));
        if (eventsSortByAsc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsSortByAsc", eventsSortByAsc));
        if (query != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("query", query));
        if (keyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "keyword", keyword));
        if (conceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "conceptUri", conceptUri));
        if (categoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "categoryUri", categoryUri));
        if (sourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceUri", sourceUri));
        if (sourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceLocationUri", sourceLocationUri));
        if (sourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceGroupUri", sourceGroupUri));
        if (authorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "authorUri", authorUri));
        if (locationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "locationUri", locationUri));
        if (lang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "lang", lang));
        if (dateStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateStart", dateStart));
        if (dateEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateEnd", dateEnd));
        if (minSentimentEvent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("minSentimentEvent", minSentimentEvent));
        if (maxSentimentEvent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxSentimentEvent", maxSentimentEvent));
        if (minArticlesInEvent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("minArticlesInEvent", minArticlesInEvent));
        if (maxArticlesInEvent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxArticlesInEvent", maxArticlesInEvent));
        if (reportingDateStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("reportingDateStart", reportingDateStart));
        if (reportingDateEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("reportingDateEnd", reportingDateEnd));
        if (dateMentionStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateMentionStart", dateMentionStart));
        if (dateMentionEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateMentionEnd", dateMentionEnd));
        if (keywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordLoc", keywordLoc));
        if (keywordOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordOper", keywordOper));
        if (conceptOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptOper", conceptOper));
        if (categoryOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("categoryOper", categoryOper));
        if (ignoreKeyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreKeyword", ignoreKeyword));
        if (ignoreConceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreConceptUri", ignoreConceptUri));
        if (ignoreCategoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreCategoryUri", ignoreCategoryUri));
        if (ignoreSourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreSourceUri", ignoreSourceUri));
        if (ignoreSourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreSourceLocationUri", ignoreSourceLocationUri));
        if (ignoreSourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreSourceGroupUri", ignoreSourceGroupUri));
        if (ignoreAuthorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreAuthorUri", ignoreAuthorUri));
        if (ignoreLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreLocationUri", ignoreLocationUri));
        if (ignoreLang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreLang", ignoreLang));
        if (ignoreKeywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("ignoreKeywordLoc", ignoreKeywordLoc));
        if (includeEventTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventTitle", includeEventTitle));
        if (includeEventSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSummary", includeEventSummary));
        if (includeEventSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSocialScore", includeEventSocialScore));
        if (includeEventSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSentiment", includeEventSentiment));
        if (includeEventLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventLocation", includeEventLocation));
        if (includeEventDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventDate", includeEventDate));
        if (includeEventArticleCounts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventArticleCounts", includeEventArticleCounts));
        if (includeEventConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventConcepts", includeEventConcepts));
        if (includeEventCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCategories", includeEventCategories));
        if (includeEventCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCommonDates", includeEventCommonDates));
        if (includeEventStories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventStories", includeEventStories));
        if (eventImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventImageCount", eventImageCount));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeStoryBasicStats != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryBasicStats", includeStoryBasicStats));
        if (includeStoryTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryTitle", includeStoryTitle));
        if (includeStoryLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryLocation", includeStoryLocation));
        if (includeStoryDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryDate", includeStoryDate));
        if (includeStoryConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryConcepts", includeStoryConcepts));
        if (includeStoryCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCategories", includeStoryCategories));
        if (includeStoryMedoidArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryMedoidArticle", includeStoryMedoidArticle));
        if (includeStoryCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCommonDates", includeStoryCommonDates));
        if (storyImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("storyImageCount", storyImageCount));
        if (includeCategoryParentUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeCategoryParentUri", includeCategoryParentUri));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getEventsValidateBeforeCall(String apiKey, List<String> resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Query1 query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, Integer minSentimentEvent, Integer maxSentimentEvent, Integer minArticlesInEvent, Integer maxArticlesInEvent, String reportingDateStart, String reportingDateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreAuthorUri, List<String> ignoreLocationUri, List<String> ignoreLang, String ignoreKeywordLoc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getEvents(Async)");
        }
        
        com.squareup.okhttp.Call call = getEventsCall(apiKey, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, minSentimentEvent, maxSentimentEvent, minArticlesInEvent, maxArticlesInEvent, reportingDateStart, reportingDateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreAuthorUri, ignoreLocationUri, ignoreLang, ignoreKeywordLoc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Retrieve a list of events that match one or more search conditions
     * Identify the world events that match a certain set of search criteria.  The search conditions can be specified by setting the &#x60;query&#x60; parameter, or by specifying one or multiple search parameters, such as &#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, etc. To remove some of the results matching the *positive* conditions, you can specify some *negative* conditions using &#x60;ignoreKeyword&#x60;, &#x60;ignoreSourceUri&#x60;, and other &#x60;ignore*&#x60; parameters.  The results of the search can be the list of matching events (when &#x60;resultType &#x3D; events&#x60;) or one of the various aggregates (summaries) of the matching events. In case of &#x60;resultType &#x3D; locAggr&#x60;, for example, the returned data will contain the geographic locations where the events matching criteria occured.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-events)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to date)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-events#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param dateStart Limit the events to those that occured on or after this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param dateEnd Limit the events to those that occured before or on this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param minSentimentEvent the minimum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentEvent the maximum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @param reportingDateStart Limit the events to those for which the reporting date was on or after this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param reportingDateEnd Limit the events to those for which the reporting date was before or on this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore events in which news articles mention the specified keyword or phrase. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then events with articles that mention any of these keywords will be ignored. (optional)
     * @param ignoreConceptUri Ignore events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label. (optional)
     * @param ignoreCategoryUri Ignore events that are about a particular category. You can specify up to 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param ignoreSourceUri Ignore events that contain one or more articles that have been written by a news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param ignoreSourceLocationUri Ignore events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreSourceGroupUri Ignore events that contain one or more articles by news sources that are assigned to the specified group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param ignoreAuthorUri Ignore events that contain articles, which were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLocationUri Ignore events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param ignoreLang Ignore events that contain articles in the specified language(s). (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2007
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2007 getEvents(String apiKey, List<String> resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Query1 query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, Integer minSentimentEvent, Integer maxSentimentEvent, Integer minArticlesInEvent, Integer maxArticlesInEvent, String reportingDateStart, String reportingDateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreAuthorUri, List<String> ignoreLocationUri, List<String> ignoreLang, String ignoreKeywordLoc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2007> resp = getEventsWithHttpInfo(apiKey, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, minSentimentEvent, maxSentimentEvent, minArticlesInEvent, maxArticlesInEvent, reportingDateStart, reportingDateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreAuthorUri, ignoreLocationUri, ignoreLang, ignoreKeywordLoc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Retrieve a list of events that match one or more search conditions
     * Identify the world events that match a certain set of search criteria.  The search conditions can be specified by setting the &#x60;query&#x60; parameter, or by specifying one or multiple search parameters, such as &#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, etc. To remove some of the results matching the *positive* conditions, you can specify some *negative* conditions using &#x60;ignoreKeyword&#x60;, &#x60;ignoreSourceUri&#x60;, and other &#x60;ignore*&#x60; parameters.  The results of the search can be the list of matching events (when &#x60;resultType &#x3D; events&#x60;) or one of the various aggregates (summaries) of the matching events. In case of &#x60;resultType &#x3D; locAggr&#x60;, for example, the returned data will contain the geographic locations where the events matching criteria occured.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-events)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to date)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-events#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param dateStart Limit the events to those that occured on or after this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param dateEnd Limit the events to those that occured before or on this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param minSentimentEvent the minimum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentEvent the maximum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @param reportingDateStart Limit the events to those for which the reporting date was on or after this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param reportingDateEnd Limit the events to those for which the reporting date was before or on this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore events in which news articles mention the specified keyword or phrase. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then events with articles that mention any of these keywords will be ignored. (optional)
     * @param ignoreConceptUri Ignore events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label. (optional)
     * @param ignoreCategoryUri Ignore events that are about a particular category. You can specify up to 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param ignoreSourceUri Ignore events that contain one or more articles that have been written by a news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param ignoreSourceLocationUri Ignore events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreSourceGroupUri Ignore events that contain one or more articles by news sources that are assigned to the specified group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param ignoreAuthorUri Ignore events that contain articles, which were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLocationUri Ignore events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param ignoreLang Ignore events that contain articles in the specified language(s). (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2007&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2007> getEventsWithHttpInfo(String apiKey, List<String> resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Query1 query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, Integer minSentimentEvent, Integer maxSentimentEvent, Integer minArticlesInEvent, Integer maxArticlesInEvent, String reportingDateStart, String reportingDateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreAuthorUri, List<String> ignoreLocationUri, List<String> ignoreLang, String ignoreKeywordLoc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getEventsValidateBeforeCall(apiKey, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, minSentimentEvent, maxSentimentEvent, minArticlesInEvent, maxArticlesInEvent, reportingDateStart, reportingDateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreAuthorUri, ignoreLocationUri, ignoreLang, ignoreKeywordLoc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2007>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve a list of events that match one or more search conditions (asynchronously)
     * Identify the world events that match a certain set of search criteria.  The search conditions can be specified by setting the &#x60;query&#x60; parameter, or by specifying one or multiple search parameters, such as &#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, etc. To remove some of the results matching the *positive* conditions, you can specify some *negative* conditions using &#x60;ignoreKeyword&#x60;, &#x60;ignoreSourceUri&#x60;, and other &#x60;ignore*&#x60; parameters.  The results of the search can be the list of matching events (when &#x60;resultType &#x3D; events&#x60;) or one of the various aggregates (summaries) of the matching events. In case of &#x60;resultType &#x3D; locAggr&#x60;, for example, the returned data will contain the geographic locations where the events matching criteria occured.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-get-events)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to date)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-events#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param dateStart Limit the events to those that occured on or after this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param dateEnd Limit the events to those that occured before or on this date. The date of the event is extracted from the news articles about the event and are potentially quite different than the dates when the articles about the event were published. (optional)
     * @param minSentimentEvent the minimum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentEvent the maximum value of the sentiment, the event should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to events covered in English, since the sentiment can only be computed for English language. (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @param reportingDateStart Limit the events to those for which the reporting date was on or after this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param reportingDateEnd Limit the events to those for which the reporting date was before or on this date. The reporting date is computed by analyzing all the dates when the articles about an event were published and computing the average value. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore events in which news articles mention the specified keyword or phrase. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then events with articles that mention any of these keywords will be ignored. (optional)
     * @param ignoreConceptUri Ignore events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label. (optional)
     * @param ignoreCategoryUri Ignore events that are about a particular category. You can specify up to 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters, then events that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param ignoreSourceUri Ignore events that contain one or more articles that have been written by a news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param ignoreSourceLocationUri Ignore events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreSourceGroupUri Ignore events that contain one or more articles by news sources that are assigned to the specified group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param ignoreAuthorUri Ignore events that contain articles, which were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLocationUri Ignore events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param ignoreLang Ignore events that contain articles in the specified language(s). (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getEventsAsync(String apiKey, List<String> resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Query1 query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, Integer minSentimentEvent, Integer maxSentimentEvent, Integer minArticlesInEvent, Integer maxArticlesInEvent, String reportingDateStart, String reportingDateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreAuthorUri, List<String> ignoreLocationUri, List<String> ignoreLang, String ignoreKeywordLoc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2007> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getEventsValidateBeforeCall(apiKey, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, minSentimentEvent, maxSentimentEvent, minArticlesInEvent, maxArticlesInEvent, reportingDateStart, reportingDateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreAuthorUri, ignoreLocationUri, ignoreLang, ignoreKeywordLoc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2007>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getEventsForTopicPage
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching events. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results you would like to get. (optional, default to events)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to rel)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getEventsForTopicPageCall(String apiKey, String uri, String resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/event/getEventsForTopicPage";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (uri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("uri", uri));
        if (resultType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("resultType", resultType));
        if (eventsPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsPage", eventsPage));
        if (eventsCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsCount", eventsCount));
        if (eventsSortBy != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsSortBy", eventsSortBy));
        if (eventsSortByAsc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventsSortByAsc", eventsSortByAsc));
        if (includeEventTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventTitle", includeEventTitle));
        if (includeEventSummary != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSummary", includeEventSummary));
        if (includeEventSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSocialScore", includeEventSocialScore));
        if (includeEventSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventSentiment", includeEventSentiment));
        if (includeEventLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventLocation", includeEventLocation));
        if (includeEventDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventDate", includeEventDate));
        if (includeEventArticleCounts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventArticleCounts", includeEventArticleCounts));
        if (includeEventConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventConcepts", includeEventConcepts));
        if (includeEventCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCategories", includeEventCategories));
        if (includeEventCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventCommonDates", includeEventCommonDates));
        if (includeEventStories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeEventStories", includeEventStories));
        if (eventImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventImageCount", eventImageCount));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeStoryBasicStats != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryBasicStats", includeStoryBasicStats));
        if (includeStoryTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryTitle", includeStoryTitle));
        if (includeStoryLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryLocation", includeStoryLocation));
        if (includeStoryDate != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryDate", includeStoryDate));
        if (includeStoryConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryConcepts", includeStoryConcepts));
        if (includeStoryCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCategories", includeStoryCategories));
        if (includeStoryMedoidArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryMedoidArticle", includeStoryMedoidArticle));
        if (includeStoryCommonDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeStoryCommonDates", includeStoryCommonDates));
        if (storyImageCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("storyImageCount", storyImageCount));
        if (includeCategoryParentUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeCategoryParentUri", includeCategoryParentUri));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getEventsForTopicPageValidateBeforeCall(String apiKey, String uri, String resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getEventsForTopicPage(Async)");
        }
        // verify the required parameter 'uri' is set
        if (uri == null) {
            throw new ApiException("Missing the required parameter 'uri' when calling getEventsForTopicPage(Async)");
        }
        
        com.squareup.okhttp.Call call = getEventsForTopicPageCall(apiKey, uri, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Obtain events that match a user generated topic page
     * Retrieve the events that match the topic page the user generated on the [monitoring page](https://eventregistry.org/monitoring).  The topic page has to be created using the web interface and can be defined by a list of concepts, keywords, news sources, categories and other available conditions. Each topic page has a uniqe id, called a URI. When you open the topic page, the URI is displayed in the url in the browser. Use that URI as the &#x60;uri&#x60; parameter when making the API calls.  Compared to the &#x60;getEvents&#x60; endpoint, this endpoint is well suited when you want to find events that match a broader topic that can be defined using a set of concepts and keywords. These concepts and keywords don&#x27;t all need to be mentioned in an event, but the more of them are mentioned, the higher will the event be in the list of results. By default, the returned events are sorted based on how well they match the topic, but you can also change the sorting by setting the &#x60;eventsSortBy&#x60; parameter.  The results of the search can be the list of matching events (when &#x60;resultType &#x3D; events&#x60;, default) or one of the various aggregates (summaries) of the matching events. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* the matching events occurred.  Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching events. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results you would like to get. (optional, default to events)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to rel)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2008
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2008 getEventsForTopicPage(String apiKey, String uri, String resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2008> resp = getEventsForTopicPageWithHttpInfo(apiKey, uri, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Obtain events that match a user generated topic page
     * Retrieve the events that match the topic page the user generated on the [monitoring page](https://eventregistry.org/monitoring).  The topic page has to be created using the web interface and can be defined by a list of concepts, keywords, news sources, categories and other available conditions. Each topic page has a uniqe id, called a URI. When you open the topic page, the URI is displayed in the url in the browser. Use that URI as the &#x60;uri&#x60; parameter when making the API calls.  Compared to the &#x60;getEvents&#x60; endpoint, this endpoint is well suited when you want to find events that match a broader topic that can be defined using a set of concepts and keywords. These concepts and keywords don&#x27;t all need to be mentioned in an event, but the more of them are mentioned, the higher will the event be in the list of results. By default, the returned events are sorted based on how well they match the topic, but you can also change the sorting by setting the &#x60;eventsSortBy&#x60; parameter.  The results of the search can be the list of matching events (when &#x60;resultType &#x3D; events&#x60;, default) or one of the various aggregates (summaries) of the matching events. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* the matching events occurred.  Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching events. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results you would like to get. (optional, default to events)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to rel)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2008&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2008> getEventsForTopicPageWithHttpInfo(String apiKey, String uri, String resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getEventsForTopicPageValidateBeforeCall(apiKey, uri, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2008>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Obtain events that match a user generated topic page (asynchronously)
     * Retrieve the events that match the topic page the user generated on the [monitoring page](https://eventregistry.org/monitoring).  The topic page has to be created using the web interface and can be defined by a list of concepts, keywords, news sources, categories and other available conditions. Each topic page has a uniqe id, called a URI. When you open the topic page, the URI is displayed in the url in the browser. Use that URI as the &#x60;uri&#x60; parameter when making the API calls.  Compared to the &#x60;getEvents&#x60; endpoint, this endpoint is well suited when you want to find events that match a broader topic that can be defined using a set of concepts and keywords. These concepts and keywords don&#x27;t all need to be mentioned in an event, but the more of them are mentioned, the higher will the event be in the list of results. By default, the returned events are sorted based on how well they match the topic, but you can also change the sorting by setting the &#x60;eventsSortBy&#x60; parameter.  The results of the search can be the list of matching events (when &#x60;resultType &#x3D; events&#x60;, default) or one of the various aggregates (summaries) of the matching events. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* the matching events occurred.  Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching events. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results you would like to get. (optional, default to events)
     * @param eventsPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 1)
     * @param eventsCount Define how many events (up to 50) will be returned. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to 50)
     * @param eventsSortBy Set how you would like to sort your results. &#x60;date&#x60; (by event date), &#x60;rel&#x60; (relevance to the query), &#x60;size&#x60; (number of articles),     &#x60;socialScore&#x60; (amount of shares in social media). Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to rel)
     * @param eventsSortByAsc Should the results be ordered in ascending order or descending order (default) based on the sorting criteria. Relevant when &#x60;resultType &#x3D; events&#x60;. (optional, default to false)
     * @param includeEventTitle Set this parameter to true to include the event title in the response. (optional, default to true)
     * @param includeEventSummary Set this parameter to true to include the event summary in the response. (optional, default to false)
     * @param includeEventSocialScore Set this parameter to true to include the event social score in the response. (optional, default to false)
     * @param includeEventSentiment Set this parameter to true to include the event sentiment in the response. (optional, default to true)
     * @param includeEventLocation Set this parameter to true to include the event location in the response. (optional, default to true)
     * @param includeEventDate Set this parameter to true to include the event date in the response. (optional, default to true)
     * @param includeEventArticleCounts Set this parameter to true to include the article counts for events in the response. (optional, default to true)
     * @param includeEventConcepts Set this parameter to true to include the event concepts in the response. (optional, default to true)
     * @param includeEventCategories Set this parameter to true to include the event categories in the response. (optional, default to true)
     * @param includeEventCommonDates Set this parameter to true to include the event commmon dates in the response. (optional, default to false)
     * @param includeEventStories Set this parameter to true to include the event stories in the response. (optional, default to false)
     * @param eventImageCount Define how many images you would like to have in the response. (optional)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeStoryBasicStats Set this parameter to true to include story basic stats in the response. (optional, default to false)
     * @param includeStoryTitle Set this parameter to true to include the story title in the response. (optional, default to false)
     * @param includeStoryLocation Set this parameter to true to include the story location in the response. (optional, default to false)
     * @param includeStoryDate Set this parameter to true to include the story date in the response. (optional, default to false)
     * @param includeStoryConcepts Set this parameter to true to include the story concepts in the response. (optional, default to false)
     * @param includeStoryCategories Set this parameter to true to include the story categories in the response. (optional, default to false)
     * @param includeStoryMedoidArticle Set this parameter to true to include story medoid article in the response. (optional, default to false)
     * @param includeStoryCommonDates Set this parameter to true to include story common dates in the response. (optional, default to false)
     * @param storyImageCount Define how many images you would like to have in the response. (optional)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getEventsForTopicPageAsync(String apiKey, String uri, String resultType, Integer eventsPage, Integer eventsCount, String eventsSortBy, Boolean eventsSortByAsc, Boolean includeEventTitle, Boolean includeEventSummary, Boolean includeEventSocialScore, Boolean includeEventSentiment, Boolean includeEventLocation, Boolean includeEventDate, Boolean includeEventArticleCounts, Boolean includeEventConcepts, Boolean includeEventCategories, Boolean includeEventCommonDates, Boolean includeEventStories, Integer eventImageCount, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, String conceptLang, Boolean includeStoryBasicStats, Boolean includeStoryTitle, Boolean includeStoryLocation, Boolean includeStoryDate, Boolean includeStoryConcepts, Boolean includeStoryCategories, Boolean includeStoryMedoidArticle, Boolean includeStoryCommonDates, Integer storyImageCount, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2008> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getEventsForTopicPageValidateBeforeCall(apiKey, uri, resultType, eventsPage, eventsCount, eventsSortBy, eventsSortByAsc, includeEventTitle, includeEventSummary, includeEventSocialScore, includeEventSentiment, includeEventLocation, includeEventDate, includeEventArticleCounts, includeEventConcepts, includeEventCategories, includeEventCommonDates, includeEventStories, eventImageCount, includeConceptLabel, includeConceptImage, includeConceptSynonyms, conceptLang, includeStoryBasicStats, includeStoryTitle, includeStoryLocation, includeStoryDate, includeStoryConcepts, includeStoryCategories, includeStoryMedoidArticle, includeStoryCommonDates, storyImageCount, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2008>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for minuteStreamEvents
     * @param apiKey Your API key (required)
     * @param recentActivityEventsMaxEventCount The maximum number of events to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned events. For 200 returned events, for example, 4*5 tokens will be used - 5 tokens for each 50 events.  (optional, default to 50)
     * @param recentActivityEventsUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of events, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamEvents&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityEventsUpdatesAfterTm The parameter can be used to retrieve events that were updated after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call minuteStreamEventsCall(String apiKey, Integer recentActivityEventsMaxEventCount, Integer recentActivityEventsUpdatesAfterMinsAgo, String recentActivityEventsUpdatesAfterTm, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> lang, Integer minArticlesInEvent, Integer maxArticlesInEvent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/minuteStreamEvents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (recentActivityEventsMaxEventCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityEventsMaxEventCount", recentActivityEventsMaxEventCount));
        if (recentActivityEventsUpdatesAfterMinsAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityEventsUpdatesAfterMinsAgo", recentActivityEventsUpdatesAfterMinsAgo));
        if (recentActivityEventsUpdatesAfterTm != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityEventsUpdatesAfterTm", recentActivityEventsUpdatesAfterTm));
        if (keyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "keyword", keyword));
        if (conceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "conceptUri", conceptUri));
        if (categoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "categoryUri", categoryUri));
        if (sourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceUri", sourceUri));
        if (sourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceLocationUri", sourceLocationUri));
        if (sourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceGroupUri", sourceGroupUri));
        if (authorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "authorUri", authorUri));
        if (locationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "locationUri", locationUri));
        if (keywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordLoc", keywordLoc));
        if (keywordOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordOper", keywordOper));
        if (conceptOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptOper", conceptOper));
        if (categoryOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("categoryOper", categoryOper));
        if (lang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "lang", lang));
        if (minArticlesInEvent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("minArticlesInEvent", minArticlesInEvent));
        if (maxArticlesInEvent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxArticlesInEvent", maxArticlesInEvent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call minuteStreamEventsValidateBeforeCall(String apiKey, Integer recentActivityEventsMaxEventCount, Integer recentActivityEventsUpdatesAfterMinsAgo, String recentActivityEventsUpdatesAfterTm, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> lang, Integer minArticlesInEvent, Integer maxArticlesInEvent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling minuteStreamEvents(Async)");
        }
        
        com.squareup.okhttp.Call call = minuteStreamEventsCall(apiKey, recentActivityEventsMaxEventCount, recentActivityEventsUpdatesAfterMinsAgo, recentActivityEventsUpdatesAfterTm, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, keywordLoc, keywordOper, conceptOper, categoryOper, lang, minArticlesInEvent, maxArticlesInEvent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * The stream of events that were added or updated in the last minute
     * The API endpoint allows the user to obtain the full list of events that were added or updated in Event Registry in the last minute. This is the only API call that also allows returning more than 50 events per call. If more than 50 events are returned, then correspondingly higher number of tokens are used per call.  Without any additional filters, the API will return *all* events added/updated in the last minute. By specifying filters like &#x60;lang&#x60;, &#x60;keyword&#x60;, &#x60;conceptUri&#x60; and others, you can however limit the returned content to only the subset that matches these filters.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-minute-stream-events)**. 
     * @param apiKey Your API key (required)
     * @param recentActivityEventsMaxEventCount The maximum number of events to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned events. For 200 returned events, for example, 4*5 tokens will be used - 5 tokens for each 50 events.  (optional, default to 50)
     * @param recentActivityEventsUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of events, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamEvents&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityEventsUpdatesAfterTm The parameter can be used to retrieve events that were updated after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @return InlineResponse20010
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse20010 minuteStreamEvents(String apiKey, Integer recentActivityEventsMaxEventCount, Integer recentActivityEventsUpdatesAfterMinsAgo, String recentActivityEventsUpdatesAfterTm, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> lang, Integer minArticlesInEvent, Integer maxArticlesInEvent) throws ApiException {
        ApiResponse<InlineResponse20010> resp = minuteStreamEventsWithHttpInfo(apiKey, recentActivityEventsMaxEventCount, recentActivityEventsUpdatesAfterMinsAgo, recentActivityEventsUpdatesAfterTm, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, keywordLoc, keywordOper, conceptOper, categoryOper, lang, minArticlesInEvent, maxArticlesInEvent);
        return resp.getData();
    }

    /**
     * The stream of events that were added or updated in the last minute
     * The API endpoint allows the user to obtain the full list of events that were added or updated in Event Registry in the last minute. This is the only API call that also allows returning more than 50 events per call. If more than 50 events are returned, then correspondingly higher number of tokens are used per call.  Without any additional filters, the API will return *all* events added/updated in the last minute. By specifying filters like &#x60;lang&#x60;, &#x60;keyword&#x60;, &#x60;conceptUri&#x60; and others, you can however limit the returned content to only the subset that matches these filters.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-minute-stream-events)**. 
     * @param apiKey Your API key (required)
     * @param recentActivityEventsMaxEventCount The maximum number of events to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned events. For 200 returned events, for example, 4*5 tokens will be used - 5 tokens for each 50 events.  (optional, default to 50)
     * @param recentActivityEventsUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of events, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamEvents&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityEventsUpdatesAfterTm The parameter can be used to retrieve events that were updated after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @return ApiResponse&lt;InlineResponse20010&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse20010> minuteStreamEventsWithHttpInfo(String apiKey, Integer recentActivityEventsMaxEventCount, Integer recentActivityEventsUpdatesAfterMinsAgo, String recentActivityEventsUpdatesAfterTm, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> lang, Integer minArticlesInEvent, Integer maxArticlesInEvent) throws ApiException {
        com.squareup.okhttp.Call call = minuteStreamEventsValidateBeforeCall(apiKey, recentActivityEventsMaxEventCount, recentActivityEventsUpdatesAfterMinsAgo, recentActivityEventsUpdatesAfterTm, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, keywordLoc, keywordOper, conceptOper, categoryOper, lang, minArticlesInEvent, maxArticlesInEvent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse20010>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * The stream of events that were added or updated in the last minute (asynchronously)
     * The API endpoint allows the user to obtain the full list of events that were added or updated in Event Registry in the last minute. This is the only API call that also allows returning more than 50 events per call. If more than 50 events are returned, then correspondingly higher number of tokens are used per call.  Without any additional filters, the API will return *all* events added/updated in the last minute. By specifying filters like &#x60;lang&#x60;, &#x60;keyword&#x60;, &#x60;conceptUri&#x60; and others, you can however limit the returned content to only the subset that matches these filters.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-events-minute-stream-events)**. 
     * @param apiKey Your API key (required)
     * @param recentActivityEventsMaxEventCount The maximum number of events to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned events. For 200 returned events, for example, 4*5 tokens will be used - 5 tokens for each 50 events.  (optional, default to 50)
     * @param recentActivityEventsUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of events, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamEvents&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityEventsUpdatesAfterTm The parameter can be used to retrieve events that were updated after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param keyword Find events in which news articles mention the specified keyword or a phrase. If you specify multiple &#x60;keyword&#x60; parameters, then only events with articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;. (optional)
     * @param conceptUri Find events for which the concept with concept uri is important. You can specify up to 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only events that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label. (optional)
     * @param categoryUri Find events that are about a particular category. You can specify up to 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then events that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name. (optional)
     * @param sourceUri Find events that contain one or more articles that have been written by a specific news source. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name. (optional)
     * @param sourceLocationUri Find events that contain one or more articles by news sources located at the given geographic location (city or a country). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param sourceGroupUri Find events that contain one or more articles by news sources that are assigned to the predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri. (optional)
     * @param authorUri Find events that contain articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find events that occurred at a particular geographic location. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get URI value for a given location name. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article about an event; if &#x27;or&#x27; then an event will be returned if it&#x27;s articles mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the event; if &#x27;or&#x27; then an event will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param lang Find events that contain articles in the specified language(s). (optional)
     * @param minArticlesInEvent Find events that have been reported in at least &#x60;minArticlesInEvent&#x60; articles (regardless of language). (optional)
     * @param maxArticlesInEvent Find events that have not been reported in more than &#x60;maxArticlesInEvent&#x60; articles (regardless of language) (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call minuteStreamEventsAsync(String apiKey, Integer recentActivityEventsMaxEventCount, Integer recentActivityEventsUpdatesAfterMinsAgo, String recentActivityEventsUpdatesAfterTm, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> lang, Integer minArticlesInEvent, Integer maxArticlesInEvent, final ApiCallback<InlineResponse20010> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = minuteStreamEventsValidateBeforeCall(apiKey, recentActivityEventsMaxEventCount, recentActivityEventsUpdatesAfterMinsAgo, recentActivityEventsUpdatesAfterTm, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, keywordLoc, keywordOper, conceptOper, categoryOper, lang, minArticlesInEvent, maxArticlesInEvent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse20010>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
