/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiCallback;
import io.swagger.client.ApiClient;
import io.swagger.client.ApiException;
import io.swagger.client.ApiResponse;
import io.swagger.client.Configuration;
import io.swagger.client.Pair;
import io.swagger.client.ProgressRequestBody;
import io.swagger.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.Query;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ArticlesApi {
    private ApiClient apiClient;

    public ArticlesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ArticlesApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for articleMapper
     * @param apiKey Your API key (required)
     * @param articleUrl Define the requested article URL. (required)
     * @param includeAllVersions Set this parameter to true to include all versions of the article. (optional)
     * @param deep  (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call articleMapperCall(String apiKey, String articleUrl, Boolean includeAllVersions, Boolean deep, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/articleMapper";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (articleUrl != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articleUrl", articleUrl));
        if (includeAllVersions != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeAllVersions", includeAllVersions));
        if (deep != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("deep", deep));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call articleMapperValidateBeforeCall(String apiKey, String articleUrl, Boolean includeAllVersions, Boolean deep, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling articleMapper(Async)");
        }
        // verify the required parameter 'articleUrl' is set
        if (articleUrl == null) {
            throw new ApiException("Missing the required parameter 'articleUrl' when calling articleMapper(Async)");
        }
        
        com.squareup.okhttp.Call call = articleMapperCall(apiKey, articleUrl, includeAllVersions, deep, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Mapping of the article URLs to the internal article URIs
     * You can use this API call if you need to map an article URL to the article URI that is used internally in Event Registry. Using the article URI you can then retrieve article information using the endpoint &#x60;/getArticle&#x60;.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-article-mapper)**. 
     * @param apiKey Your API key (required)
     * @param articleUrl Define the requested article URL. (required)
     * @param includeAllVersions Set this parameter to true to include all versions of the article. (optional)
     * @param deep  (optional)
     * @return InlineResponse2006
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2006 articleMapper(String apiKey, String articleUrl, Boolean includeAllVersions, Boolean deep) throws ApiException {
        ApiResponse<InlineResponse2006> resp = articleMapperWithHttpInfo(apiKey, articleUrl, includeAllVersions, deep);
        return resp.getData();
    }

    /**
     * Mapping of the article URLs to the internal article URIs
     * You can use this API call if you need to map an article URL to the article URI that is used internally in Event Registry. Using the article URI you can then retrieve article information using the endpoint &#x60;/getArticle&#x60;.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-article-mapper)**. 
     * @param apiKey Your API key (required)
     * @param articleUrl Define the requested article URL. (required)
     * @param includeAllVersions Set this parameter to true to include all versions of the article. (optional)
     * @param deep  (optional)
     * @return ApiResponse&lt;InlineResponse2006&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2006> articleMapperWithHttpInfo(String apiKey, String articleUrl, Boolean includeAllVersions, Boolean deep) throws ApiException {
        com.squareup.okhttp.Call call = articleMapperValidateBeforeCall(apiKey, articleUrl, includeAllVersions, deep, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2006>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Mapping of the article URLs to the internal article URIs (asynchronously)
     * You can use this API call if you need to map an article URL to the article URI that is used internally in Event Registry. Using the article URI you can then retrieve article information using the endpoint &#x60;/getArticle&#x60;.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-article-mapper)**. 
     * @param apiKey Your API key (required)
     * @param articleUrl Define the requested article URL. (required)
     * @param includeAllVersions Set this parameter to true to include all versions of the article. (optional)
     * @param deep  (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call articleMapperAsync(String apiKey, String articleUrl, Boolean includeAllVersions, Boolean deep, final ApiCallback<InlineResponse2006> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = articleMapperValidateBeforeCall(apiKey, articleUrl, includeAllVersions, deep, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2006>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getArticle
     * @param apiKey Your API key (required)
     * @param articleUri Articles are identifiable by their unique IDs (called URIs) that are assigned by Event Registry. Provide URI or a set of URIs. (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param infoArticleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to 300)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getArticleCall(String apiKey, List<String> articleUri, List<String> resultType, Integer infoArticleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/article/getArticle";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (articleUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "articleUri", articleUri));
        if (resultType != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "resultType", resultType));
        if (infoArticleBodyLen != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("infoArticleBodyLen", infoArticleBodyLen));
        if (includeArticleTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleTitle", includeArticleTitle));
        if (includeArticleBasicInfo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBasicInfo", includeArticleBasicInfo));
        if (includeArticleBody != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBody", includeArticleBody));
        if (includeArticleEventUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleEventUri", includeArticleEventUri));
        if (includeArticleSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSocialScore", includeArticleSocialScore));
        if (includeArticleSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSentiment", includeArticleSentiment));
        if (includeArticleConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleConcepts", includeArticleConcepts));
        if (includeArticleCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleCategories", includeArticleCategories));
        if (includeArticleLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLocation", includeArticleLocation));
        if (includeArticleImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleImage", includeArticleImage));
        if (includeArticleVideos != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleVideos", includeArticleVideos));
        if (includeArticleLinks != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLinks", includeArticleLinks));
        if (includeArticleExtractedDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleExtractedDates", includeArticleExtractedDates));
        if (includeArticleDuplicateList != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleDuplicateList", includeArticleDuplicateList));
        if (includeArticleOriginalArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleOriginalArticle", includeArticleOriginalArticle));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (includeConceptTrendingScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptTrendingScore", includeConceptTrendingScore));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeSourceTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceTitle", includeSourceTitle));
        if (includeSourceDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceDescription", includeSourceDescription));
        if (includeSourceLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceLocation", includeSourceLocation));
        if (includeSourceRanking != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceRanking", includeSourceRanking));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getArticleValidateBeforeCall(String apiKey, List<String> articleUri, List<String> resultType, Integer infoArticleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getArticle(Async)");
        }
        // verify the required parameter 'articleUri' is set
        if (articleUri == null) {
            throw new ApiException("Missing the required parameter 'articleUri' when calling getArticle(Async)");
        }
        
        com.squareup.okhttp.Call call = getArticleCall(apiKey, articleUri, resultType, infoArticleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Obtain details about a single or multiple news articles
     * Given a list of article URIs, obtain article details with all available meta-information.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-get-article)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param articleUri Articles are identifiable by their unique IDs (called URIs) that are assigned by Event Registry. Provide URI or a set of URIs. (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param infoArticleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to 300)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2004
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2004 getArticle(String apiKey, List<String> articleUri, List<String> resultType, Integer infoArticleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2004> resp = getArticleWithHttpInfo(apiKey, articleUri, resultType, infoArticleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Obtain details about a single or multiple news articles
     * Given a list of article URIs, obtain article details with all available meta-information.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-get-article)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param articleUri Articles are identifiable by their unique IDs (called URIs) that are assigned by Event Registry. Provide URI or a set of URIs. (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param infoArticleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to 300)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2004&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2004> getArticleWithHttpInfo(String apiKey, List<String> articleUri, List<String> resultType, Integer infoArticleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getArticleValidateBeforeCall(apiKey, articleUri, resultType, infoArticleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2004>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Obtain details about a single or multiple news articles (asynchronously)
     * Given a list of article URIs, obtain article details with all available meta-information.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-get-article)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param articleUri Articles are identifiable by their unique IDs (called URIs) that are assigned by Event Registry. Provide URI or a set of URIs. (required)
     * @param resultType Define what kind of results you would like to get. (optional)
     * @param infoArticleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to 300)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getArticleAsync(String apiKey, List<String> articleUri, List<String> resultType, Integer infoArticleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2004> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getArticleValidateBeforeCall(apiKey, articleUri, resultType, infoArticleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2004>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getArticles
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results of the search you would like to get. Default value: articles. (optional, default to articles)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;.  (optional, default to date)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-articles#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore articles that mention the specified keyword or phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then articles that mention any of these keywords will be ignored.  (optional)
     * @param ignoreConceptUri Ignore articles that mention the concept with concept uri. You can specify at most 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label.  (optional)
     * @param ignoreCategoryUri Ignore articles that are assigned into a particular category. You can specify at most 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param ignoreSourceUri Ignore articles that have been published by a news source. If you specify multiple &#x60;ignoreSourceUri&#x60; parameters, then articles from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param ignoreSourceLocationUri Ignore articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;ignoreSourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param ignoreSourceGroupUri Ignore articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param ignoreLocationUri Ignore articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreAuthorUri Ignore articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLang Ignore articles in the specified language(s). You can specify at most 5 languages in a single search. (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationGeoLocation Set to true to include the geo location (latitude, longitude) for items that are locations (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getArticlesCall(String apiKey, String resultType, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, Integer articleBodyLen, List<String> dataType, Query query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreLocationUri, List<String> ignoreAuthorUri, List<String> ignoreLang, String ignoreKeywordLoc, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationGeoLocation, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/article/getArticles";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (resultType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("resultType", resultType));
        if (articlesPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesPage", articlesPage));
        if (articlesCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesCount", articlesCount));
        if (articlesSortBy != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesSortBy", articlesSortBy));
        if (articlesSortByAsc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesSortByAsc", articlesSortByAsc));
        if (articleBodyLen != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articleBodyLen", articleBodyLen));
        if (dataType != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "dataType", dataType));
        if (query != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("query", query));
        if (keyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "keyword", keyword));
        if (conceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "conceptUri", conceptUri));
        if (categoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "categoryUri", categoryUri));
        if (sourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceUri", sourceUri));
        if (sourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceLocationUri", sourceLocationUri));
        if (sourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceGroupUri", sourceGroupUri));
        if (authorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "authorUri", authorUri));
        if (locationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "locationUri", locationUri));
        if (lang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "lang", lang));
        if (dateStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateStart", dateStart));
        if (dateEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateEnd", dateEnd));
        if (dateMentionStart != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateMentionStart", dateMentionStart));
        if (dateMentionEnd != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("dateMentionEnd", dateMentionEnd));
        if (keywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordLoc", keywordLoc));
        if (keywordOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordOper", keywordOper));
        if (conceptOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptOper", conceptOper));
        if (categoryOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("categoryOper", categoryOper));
        if (ignoreKeyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreKeyword", ignoreKeyword));
        if (ignoreConceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreConceptUri", ignoreConceptUri));
        if (ignoreCategoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreCategoryUri", ignoreCategoryUri));
        if (ignoreSourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreSourceUri", ignoreSourceUri));
        if (ignoreSourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreSourceLocationUri", ignoreSourceLocationUri));
        if (ignoreSourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreSourceGroupUri", ignoreSourceGroupUri));
        if (ignoreLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreLocationUri", ignoreLocationUri));
        if (ignoreAuthorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreAuthorUri", ignoreAuthorUri));
        if (ignoreLang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "ignoreLang", ignoreLang));
        if (ignoreKeywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("ignoreKeywordLoc", ignoreKeywordLoc));
        if (startSourceRankPercentile != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("startSourceRankPercentile", startSourceRankPercentile));
        if (endSourceRankPercentile != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("endSourceRankPercentile", endSourceRankPercentile));
        if (minSentimentArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("minSentimentArticle", minSentimentArticle));
        if (maxSentimentArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxSentimentArticle", maxSentimentArticle));
        if (isDuplicateFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("isDuplicateFilter", isDuplicateFilter));
        if (hasDuplicateFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hasDuplicateFilter", hasDuplicateFilter));
        if (eventFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventFilter", eventFilter));
        if (includeArticleTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleTitle", includeArticleTitle));
        if (includeArticleBasicInfo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBasicInfo", includeArticleBasicInfo));
        if (includeArticleBody != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBody", includeArticleBody));
        if (includeArticleEventUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleEventUri", includeArticleEventUri));
        if (includeArticleSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSocialScore", includeArticleSocialScore));
        if (includeArticleSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSentiment", includeArticleSentiment));
        if (includeArticleConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleConcepts", includeArticleConcepts));
        if (includeArticleCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleCategories", includeArticleCategories));
        if (includeArticleLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLocation", includeArticleLocation));
        if (includeArticleImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleImage", includeArticleImage));
        if (includeArticleVideos != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleVideos", includeArticleVideos));
        if (includeArticleLinks != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLinks", includeArticleLinks));
        if (includeArticleExtractedDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleExtractedDates", includeArticleExtractedDates));
        if (includeArticleDuplicateList != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleDuplicateList", includeArticleDuplicateList));
        if (includeArticleOriginalArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleOriginalArticle", includeArticleOriginalArticle));
        if (includeSourceTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceTitle", includeSourceTitle));
        if (includeSourceDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceDescription", includeSourceDescription));
        if (includeSourceLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceLocation", includeSourceLocation));
        if (includeSourceRanking != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceRanking", includeSourceRanking));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (includeConceptTrendingScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptTrendingScore", includeConceptTrendingScore));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeCategoryParentUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeCategoryParentUri", includeCategoryParentUri));
        if (includeLocationGeoLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoLocation", includeLocationGeoLocation));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getArticlesValidateBeforeCall(String apiKey, String resultType, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, Integer articleBodyLen, List<String> dataType, Query query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreLocationUri, List<String> ignoreAuthorUri, List<String> ignoreLang, String ignoreKeywordLoc, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationGeoLocation, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getArticles(Async)");
        }
        
        com.squareup.okhttp.Call call = getArticlesCall(apiKey, resultType, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, articleBodyLen, dataType, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreLocationUri, ignoreAuthorUri, ignoreLang, ignoreKeywordLoc, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationGeoLocation, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Obtain articles that match one or more search conditions
     * Identify the news articles that match a certain set of search criteria.  The search conditions can be specified by setting the &#x60;query&#x60; parameter, or by specifying one or multiple search parameters, such as &#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, etc. To remove some of the results matching the *positive* conditions, you can specify some *negative* conditions using &#x60;ignoreKeyword&#x60;, &#x60;ignoreSourceUri&#x60;, and other &#x60;ignore*&#x60; parameters.  The results of the search can be the list of matching articles (when &#x60;resultType &#x3D; articles&#x60;) or one of the various aggregates (summaries) of the matching articles. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* were the articles matching the search criteria published.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-get-articles)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results of the search you would like to get. Default value: articles. (optional, default to articles)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;.  (optional, default to date)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-articles#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore articles that mention the specified keyword or phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then articles that mention any of these keywords will be ignored.  (optional)
     * @param ignoreConceptUri Ignore articles that mention the concept with concept uri. You can specify at most 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label.  (optional)
     * @param ignoreCategoryUri Ignore articles that are assigned into a particular category. You can specify at most 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param ignoreSourceUri Ignore articles that have been published by a news source. If you specify multiple &#x60;ignoreSourceUri&#x60; parameters, then articles from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param ignoreSourceLocationUri Ignore articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;ignoreSourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param ignoreSourceGroupUri Ignore articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param ignoreLocationUri Ignore articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreAuthorUri Ignore articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLang Ignore articles in the specified language(s). You can specify at most 5 languages in a single search. (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationGeoLocation Set to true to include the geo location (latitude, longitude) for items that are locations (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2002
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2002 getArticles(String apiKey, String resultType, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, Integer articleBodyLen, List<String> dataType, Query query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreLocationUri, List<String> ignoreAuthorUri, List<String> ignoreLang, String ignoreKeywordLoc, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationGeoLocation, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2002> resp = getArticlesWithHttpInfo(apiKey, resultType, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, articleBodyLen, dataType, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreLocationUri, ignoreAuthorUri, ignoreLang, ignoreKeywordLoc, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationGeoLocation, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Obtain articles that match one or more search conditions
     * Identify the news articles that match a certain set of search criteria.  The search conditions can be specified by setting the &#x60;query&#x60; parameter, or by specifying one or multiple search parameters, such as &#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, etc. To remove some of the results matching the *positive* conditions, you can specify some *negative* conditions using &#x60;ignoreKeyword&#x60;, &#x60;ignoreSourceUri&#x60;, and other &#x60;ignore*&#x60; parameters.  The results of the search can be the list of matching articles (when &#x60;resultType &#x3D; articles&#x60;) or one of the various aggregates (summaries) of the matching articles. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* were the articles matching the search criteria published.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-get-articles)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results of the search you would like to get. Default value: articles. (optional, default to articles)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;.  (optional, default to date)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-articles#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore articles that mention the specified keyword or phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then articles that mention any of these keywords will be ignored.  (optional)
     * @param ignoreConceptUri Ignore articles that mention the concept with concept uri. You can specify at most 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label.  (optional)
     * @param ignoreCategoryUri Ignore articles that are assigned into a particular category. You can specify at most 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param ignoreSourceUri Ignore articles that have been published by a news source. If you specify multiple &#x60;ignoreSourceUri&#x60; parameters, then articles from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param ignoreSourceLocationUri Ignore articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;ignoreSourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param ignoreSourceGroupUri Ignore articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param ignoreLocationUri Ignore articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreAuthorUri Ignore articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLang Ignore articles in the specified language(s). You can specify at most 5 languages in a single search. (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationGeoLocation Set to true to include the geo location (latitude, longitude) for items that are locations (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2002&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2002> getArticlesWithHttpInfo(String apiKey, String resultType, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, Integer articleBodyLen, List<String> dataType, Query query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreLocationUri, List<String> ignoreAuthorUri, List<String> ignoreLang, String ignoreKeywordLoc, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationGeoLocation, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getArticlesValidateBeforeCall(apiKey, resultType, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, articleBodyLen, dataType, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreLocationUri, ignoreAuthorUri, ignoreLang, ignoreKeywordLoc, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationGeoLocation, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2002>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Obtain articles that match one or more search conditions (asynchronously)
     * Identify the news articles that match a certain set of search criteria.  The search conditions can be specified by setting the &#x60;query&#x60; parameter, or by specifying one or multiple search parameters, such as &#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, etc. To remove some of the results matching the *positive* conditions, you can specify some *negative* conditions using &#x60;ignoreKeyword&#x60;, &#x60;ignoreSourceUri&#x60;, and other &#x60;ignore*&#x60; parameters.  The results of the search can be the list of matching articles (when &#x60;resultType &#x3D; articles&#x60;) or one of the various aggregates (summaries) of the matching articles. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* were the articles matching the search criteria published.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-get-articles)**. Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param resultType Define what kind of results of the search you would like to get. Default value: articles. (optional, default to articles)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;.  (optional, default to date)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param query Query object with one or more search conditions. The &#x60;query&#x60; object should match the [Advanced Query Language](https://github.com/EventRegistry/event-registry-python/wiki/Searching-for-articles#advanced-query-language) format. If you specify the &#x60;query&#x60; parameter, then the query parameters specified directly (&#x60;keyword&#x60;, &#x60;conceptUri&#x60;, &#x60;sourceUri&#x60;, &#x60;categoryUri&#x60;, etc) will be ignored. (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param dateStart The starting date on or after the articles of interest were published. (optional)
     * @param dateEnd The last date on which the articles of interest were published. (optional)
     * @param dateMentionStart Ignore events (that contain one or more articles) or articles that explicitly mention a date that is equal or greater than &#x60;dateMentionStart&#x60;. (optional)
     * @param dateMentionEnd Ignore events (that contain one or more articles) or articles that explicitly mention a date that is lower or equal to &#x60;dateMentionEnd&#x60;. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param ignoreKeyword Ignore articles that mention the specified keyword or phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;ignoreKeyword&#x60; parameters, then articles that mention any of these keywords will be ignored.  (optional)
     * @param ignoreConceptUri Ignore articles that mention the concept with concept uri. You can specify at most 50 concepts in a single search. If you specify multiple &#x60;ignoreConceptUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get value for a specified concept label.  (optional)
     * @param ignoreCategoryUri Ignore articles that are assigned into a particular category. You can specify at most 20 categories in a single search. If you specify multiple &#x60;ignoreCategoryUri&#x60; parameters then articles that mention any of them will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param ignoreSourceUri Ignore articles that have been published by a news source. If you specify multiple &#x60;ignoreSourceUri&#x60; parameters, then articles from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param ignoreSourceLocationUri Ignore articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;ignoreSourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be ignored. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param ignoreSourceGroupUri Ignore articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param ignoreLocationUri Ignore articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param ignoreAuthorUri Ignore articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param ignoreLang Ignore articles in the specified language(s). You can specify at most 5 languages in a single search. (optional)
     * @param ignoreKeywordLoc What data should be used when searching using the keywords provided by &#x60;ignoreKeywords&#x60; parameter. (optional)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationGeoLocation Set to true to include the geo location (latitude, longitude) for items that are locations (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getArticlesAsync(String apiKey, String resultType, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, Integer articleBodyLen, List<String> dataType, Query query, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String dateStart, String dateEnd, String dateMentionStart, String dateMentionEnd, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, List<String> ignoreKeyword, List<String> ignoreConceptUri, List<String> ignoreCategoryUri, List<String> ignoreSourceUri, List<String> ignoreSourceLocationUri, List<String> ignoreSourceGroupUri, List<String> ignoreLocationUri, List<String> ignoreAuthorUri, List<String> ignoreLang, String ignoreKeywordLoc, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationGeoLocation, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2002> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getArticlesValidateBeforeCall(apiKey, resultType, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, articleBodyLen, dataType, query, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, dateStart, dateEnd, dateMentionStart, dateMentionEnd, keywordLoc, keywordOper, conceptOper, categoryOper, ignoreKeyword, ignoreConceptUri, ignoreCategoryUri, ignoreSourceUri, ignoreSourceLocationUri, ignoreSourceGroupUri, ignoreLocationUri, ignoreAuthorUri, ignoreLang, ignoreKeywordLoc, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationGeoLocation, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2002>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getArticlesForTopicPage
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching articles. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results of the search you would like to get. (optional, default to articles)
     * @param maxDaysBack The returned articles should not be older than this number of days. If the value is not specified, then the value set in the topic definition will be used. (optional)
     * @param onlyAfterTm Only include in the results articles that were found after the specified date-time. The parameter should be in the format &#x60;YYYY-MM-DDTHH:MM:SS&#x60;, where the value should be in the UTC timezone. The value is very handy if you want to repeatedly call the API endpoint and make sure that you don&#x27;t receive the same articles multiple times. (optional)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to rel)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getArticlesForTopicPageCall(String apiKey, String uri, String resultType, Integer maxDaysBack, String onlyAfterTm, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, List<String> dataType, Integer articleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/article/getArticlesForTopicPage";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (uri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("uri", uri));
        if (resultType != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("resultType", resultType));
        if (maxDaysBack != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxDaysBack", maxDaysBack));
        if (onlyAfterTm != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("onlyAfterTm", onlyAfterTm));
        if (articlesPage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesPage", articlesPage));
        if (articlesCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesCount", articlesCount));
        if (articlesSortBy != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesSortBy", articlesSortBy));
        if (articlesSortByAsc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articlesSortByAsc", articlesSortByAsc));
        if (dataType != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "dataType", dataType));
        if (articleBodyLen != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articleBodyLen", articleBodyLen));
        if (includeArticleTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleTitle", includeArticleTitle));
        if (includeArticleBasicInfo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBasicInfo", includeArticleBasicInfo));
        if (includeArticleBody != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleBody", includeArticleBody));
        if (includeArticleEventUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleEventUri", includeArticleEventUri));
        if (includeArticleSocialScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSocialScore", includeArticleSocialScore));
        if (includeArticleSentiment != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleSentiment", includeArticleSentiment));
        if (includeArticleConcepts != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleConcepts", includeArticleConcepts));
        if (includeArticleCategories != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleCategories", includeArticleCategories));
        if (includeArticleLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLocation", includeArticleLocation));
        if (includeArticleImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleImage", includeArticleImage));
        if (includeArticleVideos != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleVideos", includeArticleVideos));
        if (includeArticleLinks != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleLinks", includeArticleLinks));
        if (includeArticleExtractedDates != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleExtractedDates", includeArticleExtractedDates));
        if (includeArticleDuplicateList != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleDuplicateList", includeArticleDuplicateList));
        if (includeArticleOriginalArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeArticleOriginalArticle", includeArticleOriginalArticle));
        if (includeSourceTitle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceTitle", includeSourceTitle));
        if (includeSourceDescription != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceDescription", includeSourceDescription));
        if (includeSourceLocation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceLocation", includeSourceLocation));
        if (includeSourceRanking != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeSourceRanking", includeSourceRanking));
        if (includeConceptLabel != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptLabel", includeConceptLabel));
        if (includeConceptImage != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptImage", includeConceptImage));
        if (includeConceptSynonyms != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptSynonyms", includeConceptSynonyms));
        if (includeConceptTrendingScore != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeConceptTrendingScore", includeConceptTrendingScore));
        if (conceptLang != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptLang", conceptLang));
        if (includeCategoryParentUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeCategoryParentUri", includeCategoryParentUri));
        if (includeLocationPopulation != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationPopulation", includeLocationPopulation));
        if (includeLocationGeoNamesId != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationGeoNamesId", includeLocationGeoNamesId));
        if (includeLocationCountryArea != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryArea", includeLocationCountryArea));
        if (includeLocationCountryContinent != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("includeLocationCountryContinent", includeLocationCountryContinent));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getArticlesForTopicPageValidateBeforeCall(String apiKey, String uri, String resultType, Integer maxDaysBack, String onlyAfterTm, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, List<String> dataType, Integer articleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling getArticlesForTopicPage(Async)");
        }
        // verify the required parameter 'uri' is set
        if (uri == null) {
            throw new ApiException("Missing the required parameter 'uri' when calling getArticlesForTopicPage(Async)");
        }
        
        com.squareup.okhttp.Call call = getArticlesForTopicPageCall(apiKey, uri, resultType, maxDaysBack, onlyAfterTm, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, dataType, articleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * Obtain articles that match a user generated topic page
     * Retrieve the news articles that match the topic page that the user generated on the [monitoring page](https://eventregistry.org/monitoring).  The topic page has to be created using the web interface and can be defined by a list of concepts, keywords, news sources, categories and other available conditions. Each topic page has a unique id, called a URI. When you open the topic page, the URI is displayed in the url in the browser. Use that URI as the &#x60;uri&#x60; parameter when making the API calls.  Compared to the &#x60;getArticles&#x60; endpoint, this endpoint is well suited when you want to find articles that match a broader topic that can be defined using a set of concepts and keywords. These concepts and keywords don&#x27;t all need to be mentioned in an article, but the more of them are mentioned, the higher will the article be in the list of results. By default, the returned articles are sorted based on how well they match the topic, but you can also change the sorting by setting the &#x60;articlesSortBy&#x60; parameter.  The results of the search can be the list of matching articles (when &#x60;resultType &#x3D; articles&#x60;, default) or one of the various aggregates (summaries) of the matching articles. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* were the articles matching the topic were published.  Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching articles. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results of the search you would like to get. (optional, default to articles)
     * @param maxDaysBack The returned articles should not be older than this number of days. If the value is not specified, then the value set in the topic definition will be used. (optional)
     * @param onlyAfterTm Only include in the results articles that were found after the specified date-time. The parameter should be in the format &#x60;YYYY-MM-DDTHH:MM:SS&#x60;, where the value should be in the UTC timezone. The value is very handy if you want to repeatedly call the API endpoint and make sure that you don&#x27;t receive the same articles multiple times. (optional)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to rel)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return InlineResponse2003
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2003 getArticlesForTopicPage(String apiKey, String uri, String resultType, Integer maxDaysBack, String onlyAfterTm, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, List<String> dataType, Integer articleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        ApiResponse<InlineResponse2003> resp = getArticlesForTopicPageWithHttpInfo(apiKey, uri, resultType, maxDaysBack, onlyAfterTm, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, dataType, articleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent);
        return resp.getData();
    }

    /**
     * Obtain articles that match a user generated topic page
     * Retrieve the news articles that match the topic page that the user generated on the [monitoring page](https://eventregistry.org/monitoring).  The topic page has to be created using the web interface and can be defined by a list of concepts, keywords, news sources, categories and other available conditions. Each topic page has a unique id, called a URI. When you open the topic page, the URI is displayed in the url in the browser. Use that URI as the &#x60;uri&#x60; parameter when making the API calls.  Compared to the &#x60;getArticles&#x60; endpoint, this endpoint is well suited when you want to find articles that match a broader topic that can be defined using a set of concepts and keywords. These concepts and keywords don&#x27;t all need to be mentioned in an article, but the more of them are mentioned, the higher will the article be in the list of results. By default, the returned articles are sorted based on how well they match the topic, but you can also change the sorting by setting the &#x60;articlesSortBy&#x60; parameter.  The results of the search can be the list of matching articles (when &#x60;resultType &#x3D; articles&#x60;, default) or one of the various aggregates (summaries) of the matching articles. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* were the articles matching the topic were published.  Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching articles. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results of the search you would like to get. (optional, default to articles)
     * @param maxDaysBack The returned articles should not be older than this number of days. If the value is not specified, then the value set in the topic definition will be used. (optional)
     * @param onlyAfterTm Only include in the results articles that were found after the specified date-time. The parameter should be in the format &#x60;YYYY-MM-DDTHH:MM:SS&#x60;, where the value should be in the UTC timezone. The value is very handy if you want to repeatedly call the API endpoint and make sure that you don&#x27;t receive the same articles multiple times. (optional)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to rel)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @return ApiResponse&lt;InlineResponse2003&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2003> getArticlesForTopicPageWithHttpInfo(String apiKey, String uri, String resultType, Integer maxDaysBack, String onlyAfterTm, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, List<String> dataType, Integer articleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent) throws ApiException {
        com.squareup.okhttp.Call call = getArticlesForTopicPageValidateBeforeCall(apiKey, uri, resultType, maxDaysBack, onlyAfterTm, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, dataType, articleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2003>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Obtain articles that match a user generated topic page (asynchronously)
     * Retrieve the news articles that match the topic page that the user generated on the [monitoring page](https://eventregistry.org/monitoring).  The topic page has to be created using the web interface and can be defined by a list of concepts, keywords, news sources, categories and other available conditions. Each topic page has a unique id, called a URI. When you open the topic page, the URI is displayed in the url in the browser. Use that URI as the &#x60;uri&#x60; parameter when making the API calls.  Compared to the &#x60;getArticles&#x60; endpoint, this endpoint is well suited when you want to find articles that match a broader topic that can be defined using a set of concepts and keywords. These concepts and keywords don&#x27;t all need to be mentioned in an article, but the more of them are mentioned, the higher will the article be in the list of results. By default, the returned articles are sorted based on how well they match the topic, but you can also change the sorting by setting the &#x60;articlesSortBy&#x60; parameter.  The results of the search can be the list of matching articles (when &#x60;resultType &#x3D; articles&#x60;, default) or one of the various aggregates (summaries) of the matching articles. In case of &#x60;resultType &#x3D; timeAggr&#x60;, for example, the returned data will contain information *when* were the articles matching the topic were published.  Details about the returned information is available on the **[data model page](https://github.com/EventRegistry/event-registry-python/wiki/Data-models)**. 
     * @param apiKey Your API key (required)
     * @param uri URI of the topic page for which you wish to retrieve matching articles. Obtain the URI from the URL on the [monitoring page](https://eventregistry.org/monitoring) when the topic page is opened. (required)
     * @param resultType Define what kind of results of the search you would like to get. (optional, default to articles)
     * @param maxDaysBack The returned articles should not be older than this number of days. If the value is not specified, then the value set in the topic definition will be used. (optional)
     * @param onlyAfterTm Only include in the results articles that were found after the specified date-time. The parameter should be in the format &#x60;YYYY-MM-DDTHH:MM:SS&#x60;, where the value should be in the UTC timezone. The value is very handy if you want to repeatedly call the API endpoint and make sure that you don&#x27;t receive the same articles multiple times. (optional)
     * @param articlesPage Determines the page of the results to return (starting from 1). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 1)
     * @param articlesCount Define how many articles (up to 100) will be returned. Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to 100)
     * @param articlesSortBy Choose the criteria for sorting the news articles. &#x60;rel&#x60; (relevance to the query), &#x60;date&#x60; (publishing date), &#x60;sourceImportance&#x60; (manually curated score of source importance - high value, high importance), &#x60;sourceImportanceRank&#x60; (reverse of sourceImportance), &#x60;sourceAlexaGlobalRank&#x60; (global rank of the news source), &#x60;sourceAlexaCountryRank&#x60; (country rank of the news source), &#x60;socialScore&#x60; (total shares on social media), &#x60;facebookShares&#x60; (shares on Facebook only). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to rel)
     * @param articlesSortByAsc Should the results be ordered in ascending order or descending order (default). Relevant when &#x60;resultType &#x3D; articles&#x60;. (optional, default to false)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param includeArticleTitle Set this parameter to true to include the article title in the response. (optional, default to true)
     * @param includeArticleBasicInfo Set this parameter to true to include the core article information in the response. (optional, default to true)
     * @param includeArticleBody Set this parameter to true to include the article body in the response. (optional, default to true)
     * @param includeArticleEventUri Set this parameter to true to include the uri of the event (to which the article belongs) in the response. (optional, default to true)
     * @param includeArticleSocialScore Set this parameter to true to include the information about how many times the article was shared on different social media. (optional, default to false)
     * @param includeArticleSentiment Set this parameter to true to include the article sentiment in the response (value will be non-null only for English articles). (optional, default to true)
     * @param includeArticleConcepts Set this parameter to true to include the article concepts in the response. (optional, default to false)
     * @param includeArticleCategories Set this parameter to true to include the article categories in the response. (optional, default to false)
     * @param includeArticleLocation Set this parameter to true to include the article location in the response. (optional, default to false)
     * @param includeArticleImage Set this parameter to true to include the article image in the response. (optional, default to true)
     * @param includeArticleVideos Set this parameter to true to include the article videos in the response. (optional, default to false)
     * @param includeArticleLinks Set this parameter to true to include the article links in the response. (optional, default to false)
     * @param includeArticleExtractedDates Set this parameter to true to include article extracted dates in the response. (optional, default to false)
     * @param includeArticleDuplicateList Set this parameter to true to include the list of duplicate articles in the response. (optional, default to false)
     * @param includeArticleOriginalArticle Set this parameter to true to include the original article in the response. (optional, default to false)
     * @param includeSourceTitle Set this parameter to true to include the source title in the response. (optional, default to true)
     * @param includeSourceDescription Set this parameter to true to include the source description in the response. (optional, default to false)
     * @param includeSourceLocation Set this parameter to true to include the source location in the response. (optional, default to false)
     * @param includeSourceRanking Set this parameter to true to include the source ranking in the response. (optional, default to false)
     * @param includeConceptLabel Set this parameter to true to include the concept label in the response. (optional, default to true)
     * @param includeConceptImage Set this parameter to true to include the concept image in the response. (optional, default to false)
     * @param includeConceptSynonyms Set this parameter to true to include the concept synonyms in the response. (optional, default to false)
     * @param includeConceptTrendingScore Set this parameter to true to include concept trending score in the response. (optional, default to false)
     * @param conceptLang Define the language of the concept label. (optional, default to eng)
     * @param includeCategoryParentUri Set this parameter to true to include category parent uri in the response. (optional, default to false)
     * @param includeLocationPopulation Set to true to include the population size of the location (optional, default to false)
     * @param includeLocationGeoNamesId Set to true to include the GeoNames id of the location (optional, default to false)
     * @param includeLocationCountryArea Set to true to include the are of the location in squared km. (optional, default to false)
     * @param includeLocationCountryContinent Set to true to get the continent of the country for location objects. (optional, default to false)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getArticlesForTopicPageAsync(String apiKey, String uri, String resultType, Integer maxDaysBack, String onlyAfterTm, Integer articlesPage, Integer articlesCount, String articlesSortBy, Boolean articlesSortByAsc, List<String> dataType, Integer articleBodyLen, Boolean includeArticleTitle, Boolean includeArticleBasicInfo, Boolean includeArticleBody, Boolean includeArticleEventUri, Boolean includeArticleSocialScore, Boolean includeArticleSentiment, Boolean includeArticleConcepts, Boolean includeArticleCategories, Boolean includeArticleLocation, Boolean includeArticleImage, Boolean includeArticleVideos, Boolean includeArticleLinks, Boolean includeArticleExtractedDates, Boolean includeArticleDuplicateList, Boolean includeArticleOriginalArticle, Boolean includeSourceTitle, Boolean includeSourceDescription, Boolean includeSourceLocation, Boolean includeSourceRanking, Boolean includeConceptLabel, Boolean includeConceptImage, Boolean includeConceptSynonyms, Boolean includeConceptTrendingScore, String conceptLang, Boolean includeCategoryParentUri, Boolean includeLocationPopulation, Boolean includeLocationGeoNamesId, Boolean includeLocationCountryArea, Boolean includeLocationCountryContinent, final ApiCallback<InlineResponse2003> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getArticlesForTopicPageValidateBeforeCall(apiKey, uri, resultType, maxDaysBack, onlyAfterTm, articlesPage, articlesCount, articlesSortBy, articlesSortByAsc, dataType, articleBodyLen, includeArticleTitle, includeArticleBasicInfo, includeArticleBody, includeArticleEventUri, includeArticleSocialScore, includeArticleSentiment, includeArticleConcepts, includeArticleCategories, includeArticleLocation, includeArticleImage, includeArticleVideos, includeArticleLinks, includeArticleExtractedDates, includeArticleDuplicateList, includeArticleOriginalArticle, includeSourceTitle, includeSourceDescription, includeSourceLocation, includeSourceRanking, includeConceptLabel, includeConceptImage, includeConceptSynonyms, includeConceptTrendingScore, conceptLang, includeCategoryParentUri, includeLocationPopulation, includeLocationGeoNamesId, includeLocationCountryArea, includeLocationCountryContinent, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2003>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for minuteStreamArticles
     * @param apiKey Your API key (required)
     * @param recentActivityArticlesMaxArticleCount The maximum number of articles to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned articles (for 300 returned articles, 3 tokens will be used, etc.).  (optional, default to 100)
     * @param recentActivityArticlesUpdatesAfterUri The actual names of the parameters should be &#x60;recentActivityArticlesNewsUpdatesAfterUri&#x60;, &#x60;recentActivityArticlesBlogUpdatesAfterUri&#x60; and &#x60;recentActivityArticlesPrUpdatesAfterUri&#x60;, depending on which &#x60;dataType&#x60; parameters you require. Specifying the parameter(s) will only return articles that were added since the articles with the provided URI were added. If you are repeatedly calling the endpoint, using this parameter is the best way to ensure that all matching content is retrieved.  (optional)
     * @param recentActivityArticlesUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of articles, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamArticles&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityArticlesUpdatesAfterTm The parameter can be used to retrieve articles that were collected after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call minuteStreamArticlesCall(String apiKey, Integer recentActivityArticlesMaxArticleCount, String recentActivityArticlesUpdatesAfterUri, Integer recentActivityArticlesUpdatesAfterMinsAgo, String recentActivityArticlesUpdatesAfterTm, Integer articleBodyLen, List<String> dataType, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/api/v1/minuteStreamArticles";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (apiKey != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("apiKey", apiKey));
        if (recentActivityArticlesMaxArticleCount != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityArticlesMaxArticleCount", recentActivityArticlesMaxArticleCount));
        if (recentActivityArticlesUpdatesAfterUri != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityArticles*UpdatesAfterUri", recentActivityArticlesUpdatesAfterUri));
        if (recentActivityArticlesUpdatesAfterMinsAgo != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityArticlesUpdatesAfterMinsAgo", recentActivityArticlesUpdatesAfterMinsAgo));
        if (recentActivityArticlesUpdatesAfterTm != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("recentActivityArticlesUpdatesAfterTm", recentActivityArticlesUpdatesAfterTm));
        if (articleBodyLen != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("articleBodyLen", articleBodyLen));
        if (dataType != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "dataType", dataType));
        if (keyword != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "keyword", keyword));
        if (conceptUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "conceptUri", conceptUri));
        if (categoryUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "categoryUri", categoryUri));
        if (sourceUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceUri", sourceUri));
        if (sourceLocationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceLocationUri", sourceLocationUri));
        if (sourceGroupUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "sourceGroupUri", sourceGroupUri));
        if (authorUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "authorUri", authorUri));
        if (locationUri != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "locationUri", locationUri));
        if (lang != null)
        localVarCollectionQueryParams.addAll(apiClient.parameterToPairs("multi", "lang", lang));
        if (keywordLoc != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordLoc", keywordLoc));
        if (keywordOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("keywordOper", keywordOper));
        if (conceptOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("conceptOper", conceptOper));
        if (categoryOper != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("categoryOper", categoryOper));
        if (startSourceRankPercentile != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("startSourceRankPercentile", startSourceRankPercentile));
        if (endSourceRankPercentile != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("endSourceRankPercentile", endSourceRankPercentile));
        if (minSentimentArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("minSentimentArticle", minSentimentArticle));
        if (maxSentimentArticle != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("maxSentimentArticle", maxSentimentArticle));
        if (isDuplicateFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("isDuplicateFilter", isDuplicateFilter));
        if (hasDuplicateFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("hasDuplicateFilter", hasDuplicateFilter));
        if (eventFilter != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("eventFilter", eventFilter));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] {  };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call minuteStreamArticlesValidateBeforeCall(String apiKey, Integer recentActivityArticlesMaxArticleCount, String recentActivityArticlesUpdatesAfterUri, Integer recentActivityArticlesUpdatesAfterMinsAgo, String recentActivityArticlesUpdatesAfterTm, Integer articleBodyLen, List<String> dataType, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'apiKey' is set
        if (apiKey == null) {
            throw new ApiException("Missing the required parameter 'apiKey' when calling minuteStreamArticles(Async)");
        }
        
        com.squareup.okhttp.Call call = minuteStreamArticlesCall(apiKey, recentActivityArticlesMaxArticleCount, recentActivityArticlesUpdatesAfterUri, recentActivityArticlesUpdatesAfterMinsAgo, recentActivityArticlesUpdatesAfterTm, articleBodyLen, dataType, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * The minute stream of news articles added to Event Registry
     * The API endpoint allows the user to obtain the full list of news articles added to Event Registry in the last minute. This is the only API call that also allows returning more than 100 articles per call. If more than 100 articles are returned, then correspondingly higher number of tokens are used per call.  Without any additional filters, the API will return 100 articles added in the last minute. By specifying filters like &#x60;lang&#x60;, &#x60;keyword&#x60;, &#x60;conceptUri&#x60; and others, you can however limit the recently added content to only the subset that matches these filters.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-minute-stream-articles)**. 
     * @param apiKey Your API key (required)
     * @param recentActivityArticlesMaxArticleCount The maximum number of articles to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned articles (for 300 returned articles, 3 tokens will be used, etc.).  (optional, default to 100)
     * @param recentActivityArticlesUpdatesAfterUri The actual names of the parameters should be &#x60;recentActivityArticlesNewsUpdatesAfterUri&#x60;, &#x60;recentActivityArticlesBlogUpdatesAfterUri&#x60; and &#x60;recentActivityArticlesPrUpdatesAfterUri&#x60;, depending on which &#x60;dataType&#x60; parameters you require. Specifying the parameter(s) will only return articles that were added since the articles with the provided URI were added. If you are repeatedly calling the endpoint, using this parameter is the best way to ensure that all matching content is retrieved.  (optional)
     * @param recentActivityArticlesUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of articles, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamArticles&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityArticlesUpdatesAfterTm The parameter can be used to retrieve articles that were collected after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @return InlineResponse2005
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public InlineResponse2005 minuteStreamArticles(String apiKey, Integer recentActivityArticlesMaxArticleCount, String recentActivityArticlesUpdatesAfterUri, Integer recentActivityArticlesUpdatesAfterMinsAgo, String recentActivityArticlesUpdatesAfterTm, Integer articleBodyLen, List<String> dataType, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter) throws ApiException {
        ApiResponse<InlineResponse2005> resp = minuteStreamArticlesWithHttpInfo(apiKey, recentActivityArticlesMaxArticleCount, recentActivityArticlesUpdatesAfterUri, recentActivityArticlesUpdatesAfterMinsAgo, recentActivityArticlesUpdatesAfterTm, articleBodyLen, dataType, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter);
        return resp.getData();
    }

    /**
     * The minute stream of news articles added to Event Registry
     * The API endpoint allows the user to obtain the full list of news articles added to Event Registry in the last minute. This is the only API call that also allows returning more than 100 articles per call. If more than 100 articles are returned, then correspondingly higher number of tokens are used per call.  Without any additional filters, the API will return 100 articles added in the last minute. By specifying filters like &#x60;lang&#x60;, &#x60;keyword&#x60;, &#x60;conceptUri&#x60; and others, you can however limit the recently added content to only the subset that matches these filters.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-minute-stream-articles)**. 
     * @param apiKey Your API key (required)
     * @param recentActivityArticlesMaxArticleCount The maximum number of articles to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned articles (for 300 returned articles, 3 tokens will be used, etc.).  (optional, default to 100)
     * @param recentActivityArticlesUpdatesAfterUri The actual names of the parameters should be &#x60;recentActivityArticlesNewsUpdatesAfterUri&#x60;, &#x60;recentActivityArticlesBlogUpdatesAfterUri&#x60; and &#x60;recentActivityArticlesPrUpdatesAfterUri&#x60;, depending on which &#x60;dataType&#x60; parameters you require. Specifying the parameter(s) will only return articles that were added since the articles with the provided URI were added. If you are repeatedly calling the endpoint, using this parameter is the best way to ensure that all matching content is retrieved.  (optional)
     * @param recentActivityArticlesUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of articles, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamArticles&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityArticlesUpdatesAfterTm The parameter can be used to retrieve articles that were collected after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @return ApiResponse&lt;InlineResponse2005&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<InlineResponse2005> minuteStreamArticlesWithHttpInfo(String apiKey, Integer recentActivityArticlesMaxArticleCount, String recentActivityArticlesUpdatesAfterUri, Integer recentActivityArticlesUpdatesAfterMinsAgo, String recentActivityArticlesUpdatesAfterTm, Integer articleBodyLen, List<String> dataType, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter) throws ApiException {
        com.squareup.okhttp.Call call = minuteStreamArticlesValidateBeforeCall(apiKey, recentActivityArticlesMaxArticleCount, recentActivityArticlesUpdatesAfterUri, recentActivityArticlesUpdatesAfterMinsAgo, recentActivityArticlesUpdatesAfterTm, articleBodyLen, dataType, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, null, null);
        Type localVarReturnType = new TypeToken<InlineResponse2005>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * The minute stream of news articles added to Event Registry (asynchronously)
     * The API endpoint allows the user to obtain the full list of news articles added to Event Registry in the last minute. This is the only API call that also allows returning more than 100 articles per call. If more than 100 articles are returned, then correspondingly higher number of tokens are used per call.  Without any additional filters, the API will return 100 articles added in the last minute. By specifying filters like &#x60;lang&#x60;, &#x60;keyword&#x60;, &#x60;conceptUri&#x60; and others, you can however limit the recently added content to only the subset that matches these filters.  Examples of use are provided on the **[examples page](https://eventregistry.org/documentation/examples#event-registry-api-examples-articles-minute-stream-articles)**. 
     * @param apiKey Your API key (required)
     * @param recentActivityArticlesMaxArticleCount The maximum number of articles to return. Maximum value specified can be 2.000. The number of used tokens will correspond to the number of returned articles (for 300 returned articles, 3 tokens will be used, etc.).  (optional, default to 100)
     * @param recentActivityArticlesUpdatesAfterUri The actual names of the parameters should be &#x60;recentActivityArticlesNewsUpdatesAfterUri&#x60;, &#x60;recentActivityArticlesBlogUpdatesAfterUri&#x60; and &#x60;recentActivityArticlesPrUpdatesAfterUri&#x60;, depending on which &#x60;dataType&#x60; parameters you require. Specifying the parameter(s) will only return articles that were added since the articles with the provided URI were added. If you are repeatedly calling the endpoint, using this parameter is the best way to ensure that all matching content is retrieved.  (optional)
     * @param recentActivityArticlesUpdatesAfterMinsAgo The parameter can be used to retrieve not only the last minute of articles, but more minutes. When using some filtering parameters below you use can use this parameter to call &#x60;minuteStreamArticles&#x60; endpoint only every few minutes and still retrieve all added content matching your filters. The value should be at most 240 (4 hours).  (optional)
     * @param recentActivityArticlesUpdatesAfterTm The parameter can be used to retrieve articles that were collected after the specified time. The value should be in format &#x60;YYYY-MM-DDTHH:MM:SS&#x60; and should represent datetime in UTC timezone. The value should be at most 4 hours in the past.  (optional)
     * @param articleBodyLen Set the size of the article body that&#x27;ll be returned in the response. Use -1 for full article body. (optional, default to -1)
     * @param dataType What data types should we search? news content (default, &#x60;news&#x60;), press releases (&#x60;pr&#x60;) or blogs (&#x60;blog&#x60;). (optional)
     * @param keyword Find articles that mention the specified keyword or a phrase. You can specify at most 60 keywords in a single search. If you specify multiple &#x60;keyword&#x60; parameters, then only articles that mention all of them will be returned, unless you specify &#x60;keywordOper&#x60; parameter and set it to &#x27;or&#x27;.  (optional)
     * @param conceptUri Find articles that mention the concept with a concept uri. You can specify at most 50 concepts in a single search. If multiple &#x60;conceptUri&#x60; parameters are provided, then only articles that are about all specified concepts will be returned, unless you specify &#x60;conceptOper&#x60; parameter and set it to &#x27;or&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggConcepts) to get concept URI value for a specified concept label.  (optional)
     * @param categoryUri Find articles that are assigned to a particular category. You can specify at most 20 categories in a single search. If multiple &#x60;categoryUri&#x60; parameters are provided, then articles that are about any of the specified categories will be returned, unless you specify &#x60;categoryOper&#x60; parameter and set it to &#x27;and&#x27;. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggCategories) to get value for a specified category name.  (optional)
     * @param sourceUri Find articles that have been published by a news source. If you specify multiple &#x60;sourceUri&#x60; parameters, then articles from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSources) to get value for a source name.  (optional)
     * @param sourceLocationUri Find articles that were published by news sources located at the given geographic location (city or country). If you specify multiple &#x60;sourceLocationUri&#x60; parameters, then articles from sources from any of the specified sources will be returned. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name.  (optional)
     * @param sourceGroupUri Find articles that were published by news sources that are assigned to some predefined group of news sources. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggSourceGroups) to get value for a source group or find the uri.  (optional)
     * @param authorUri Find articles that were written by a particular author. Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggAuthors) to get value for author uri based on the author name (and potentially source url). (optional)
     * @param locationUri Find articles that describe something that occured at a particular location (based on the location mentioned in the dateline). Check [autosuggest methods](https://eventregistry.org/documentation?tab&#x3D;suggLocations) to get value for a location name. (optional)
     * @param lang Find articles in the specific language(s). If not specified, all languages will be included. You can specify at most 5 languages in a single search. (optional)
     * @param keywordLoc What data should be used when searching using the keywords provided by &#x60;keywords&#x60; parameter. (optional, default to body)
     * @param keywordOper If more keywords are provided with the &#x60;keyword&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified keywords have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided keywords. (optional, default to and)
     * @param conceptOper If more concepts are provided with the &#x60;conceptUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; (default) then all of the specified concepts have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided concepts. (optional, default to and)
     * @param categoryOper If more categories are provided with the &#x60;categoryUri&#x60; parameter, what should be the Boolean operator used. If &#x27;and&#x27; then all of the specified categories have to be present in the article; if &#x27;or&#x27; then an article will be returned if it mentions any of the provided categories. (optional, default to or)
     * @param startSourceRankPercentile starting [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 0). Value should be in range 0-90 and divisible by 10. (optional)
     * @param endSourceRankPercentile ending [ranking percentile of the sources](https://github.com/EventRegistry/event-registry-python/wiki/Source-filtering#filtering-of-sources-based-on-their-ranking) to consider in the results (default: 100). Value should be in range 10-100 and divisible by 10. (optional)
     * @param minSentimentArticle the minimum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param maxSentimentArticle the maximum value of the sentiment, the article should have. Valid value is any floating number between -1 (very negative) to 1 (very positive). 0 represents neutral sentiment. Note that setting the value will automatically reduce results to just English articles, since the sentiment can only be computed for English language. (optional)
     * @param isDuplicateFilter Some articles can be duplicates of other articles. What should be done with them. (optional, default to keepAll)
     * @param hasDuplicateFilter Some articles are later copied by others. What should be done with such articles. (optional, default to keepAll)
     * @param eventFilter Some articles describe a known event and some don&#x27;t. This filter allows you to filter the resulting articles based on this criteria. (optional, default to keepAll)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call minuteStreamArticlesAsync(String apiKey, Integer recentActivityArticlesMaxArticleCount, String recentActivityArticlesUpdatesAfterUri, Integer recentActivityArticlesUpdatesAfterMinsAgo, String recentActivityArticlesUpdatesAfterTm, Integer articleBodyLen, List<String> dataType, List<String> keyword, List<String> conceptUri, List<String> categoryUri, List<String> sourceUri, List<String> sourceLocationUri, List<String> sourceGroupUri, List<String> authorUri, List<String> locationUri, List<String> lang, String keywordLoc, String keywordOper, String conceptOper, String categoryOper, Integer startSourceRankPercentile, Integer endSourceRankPercentile, Integer minSentimentArticle, Integer maxSentimentArticle, String isDuplicateFilter, String hasDuplicateFilter, String eventFilter, final ApiCallback<InlineResponse2005> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = minuteStreamArticlesValidateBeforeCall(apiKey, recentActivityArticlesMaxArticleCount, recentActivityArticlesUpdatesAfterUri, recentActivityArticlesUpdatesAfterMinsAgo, recentActivityArticlesUpdatesAfterTm, articleBodyLen, dataType, keyword, conceptUri, categoryUri, sourceUri, sourceLocationUri, sourceGroupUri, authorUri, locationUri, lang, keywordLoc, keywordOper, conceptOper, categoryOper, startSourceRankPercentile, endSourceRankPercentile, minSentimentArticle, maxSentimentArticle, isDuplicateFilter, hasDuplicateFilter, eventFilter, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<InlineResponse2005>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
