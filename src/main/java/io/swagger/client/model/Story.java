/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Article;
import io.swagger.client.model.CategoryTag;
import io.swagger.client.model.Concept;
import io.swagger.client.model.Location;
import io.swagger.client.model.StoryCommonDates;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Story
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-03T18:38:48.218840542Z[GMT]")

public class Story {
  @SerializedName("uri")
  private String uri = null;

  @SerializedName("articleCount")
  private Integer articleCount = null;

  @SerializedName("lang")
  private String lang = null;

  @SerializedName("avgCos")
  private Double avgCos = null;

  @SerializedName("variance")
  private Double variance = null;

  @SerializedName("eventUri")
  private String eventUri = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("isUserSetTitle")
  private Boolean isUserSetTitle = null;

  @SerializedName("concepts")
  private List<Concept> concepts = null;

  @SerializedName("location")
  private Location location = null;

  @SerializedName("isUserSetLocation")
  private Boolean isUserSetLocation = null;

  @SerializedName("categories")
  private List<CategoryTag> categories = null;

  @SerializedName("medoidArticle")
  private Article medoidArticle = null;

  @SerializedName("storyDate")
  private String storyDate = null;

  @SerializedName("isUserSetDate")
  private Boolean isUserSetDate = null;

  @SerializedName("extractedDate")
  private String extractedDate = null;

  @SerializedName("averageDate")
  private String averageDate = null;

  @SerializedName("images")
  private List<String> images = null;

  @SerializedName("commonDates")
  private List<StoryCommonDates> commonDates = null;

  @SerializedName("socialScore")
  private Double socialScore = null;

  @SerializedName("wgt")
  private Integer wgt = null;

  public Story uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Schema(description = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public Story articleCount(Integer articleCount) {
    this.articleCount = articleCount;
    return this;
  }

   /**
   * Get articleCount
   * @return articleCount
  **/
  @Schema(description = "")
  public Integer getArticleCount() {
    return articleCount;
  }

  public void setArticleCount(Integer articleCount) {
    this.articleCount = articleCount;
  }

  public Story lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * Get lang
   * @return lang
  **/
  @Schema(description = "")
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }

  public Story avgCos(Double avgCos) {
    this.avgCos = avgCos;
    return this;
  }

   /**
   * Get avgCos
   * @return avgCos
  **/
  @Schema(description = "")
  public Double getAvgCos() {
    return avgCos;
  }

  public void setAvgCos(Double avgCos) {
    this.avgCos = avgCos;
  }

  public Story variance(Double variance) {
    this.variance = variance;
    return this;
  }

   /**
   * Get variance
   * @return variance
  **/
  @Schema(description = "")
  public Double getVariance() {
    return variance;
  }

  public void setVariance(Double variance) {
    this.variance = variance;
  }

  public Story eventUri(String eventUri) {
    this.eventUri = eventUri;
    return this;
  }

   /**
   * Get eventUri
   * @return eventUri
  **/
  @Schema(description = "")
  public String getEventUri() {
    return eventUri;
  }

  public void setEventUri(String eventUri) {
    this.eventUri = eventUri;
  }

  public Story title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Story isUserSetTitle(Boolean isUserSetTitle) {
    this.isUserSetTitle = isUserSetTitle;
    return this;
  }

   /**
   * Get isUserSetTitle
   * @return isUserSetTitle
  **/
  @Schema(description = "")
  public Boolean isIsUserSetTitle() {
    return isUserSetTitle;
  }

  public void setIsUserSetTitle(Boolean isUserSetTitle) {
    this.isUserSetTitle = isUserSetTitle;
  }

  public Story concepts(List<Concept> concepts) {
    this.concepts = concepts;
    return this;
  }

  public Story addConceptsItem(Concept conceptsItem) {
    if (this.concepts == null) {
      this.concepts = new ArrayList<Concept>();
    }
    this.concepts.add(conceptsItem);
    return this;
  }

   /**
   * Get concepts
   * @return concepts
  **/
  @Schema(description = "")
  public List<Concept> getConcepts() {
    return concepts;
  }

  public void setConcepts(List<Concept> concepts) {
    this.concepts = concepts;
  }

  public Story location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public Story isUserSetLocation(Boolean isUserSetLocation) {
    this.isUserSetLocation = isUserSetLocation;
    return this;
  }

   /**
   * Get isUserSetLocation
   * @return isUserSetLocation
  **/
  @Schema(description = "")
  public Boolean isIsUserSetLocation() {
    return isUserSetLocation;
  }

  public void setIsUserSetLocation(Boolean isUserSetLocation) {
    this.isUserSetLocation = isUserSetLocation;
  }

  public Story categories(List<CategoryTag> categories) {
    this.categories = categories;
    return this;
  }

  public Story addCategoriesItem(CategoryTag categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<CategoryTag>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @Schema(description = "")
  public List<CategoryTag> getCategories() {
    return categories;
  }

  public void setCategories(List<CategoryTag> categories) {
    this.categories = categories;
  }

  public Story medoidArticle(Article medoidArticle) {
    this.medoidArticle = medoidArticle;
    return this;
  }

   /**
   * Get medoidArticle
   * @return medoidArticle
  **/
  @Schema(description = "")
  public Article getMedoidArticle() {
    return medoidArticle;
  }

  public void setMedoidArticle(Article medoidArticle) {
    this.medoidArticle = medoidArticle;
  }

  public Story storyDate(String storyDate) {
    this.storyDate = storyDate;
    return this;
  }

   /**
   * Get storyDate
   * @return storyDate
  **/
  @Schema(description = "")
  public String getStoryDate() {
    return storyDate;
  }

  public void setStoryDate(String storyDate) {
    this.storyDate = storyDate;
  }

  public Story isUserSetDate(Boolean isUserSetDate) {
    this.isUserSetDate = isUserSetDate;
    return this;
  }

   /**
   * Get isUserSetDate
   * @return isUserSetDate
  **/
  @Schema(description = "")
  public Boolean isIsUserSetDate() {
    return isUserSetDate;
  }

  public void setIsUserSetDate(Boolean isUserSetDate) {
    this.isUserSetDate = isUserSetDate;
  }

  public Story extractedDate(String extractedDate) {
    this.extractedDate = extractedDate;
    return this;
  }

   /**
   * Get extractedDate
   * @return extractedDate
  **/
  @Schema(description = "")
  public String getExtractedDate() {
    return extractedDate;
  }

  public void setExtractedDate(String extractedDate) {
    this.extractedDate = extractedDate;
  }

  public Story averageDate(String averageDate) {
    this.averageDate = averageDate;
    return this;
  }

   /**
   * Get averageDate
   * @return averageDate
  **/
  @Schema(description = "")
  public String getAverageDate() {
    return averageDate;
  }

  public void setAverageDate(String averageDate) {
    this.averageDate = averageDate;
  }

  public Story images(List<String> images) {
    this.images = images;
    return this;
  }

  public Story addImagesItem(String imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<String>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @Schema(description = "")
  public List<String> getImages() {
    return images;
  }

  public void setImages(List<String> images) {
    this.images = images;
  }

  public Story commonDates(List<StoryCommonDates> commonDates) {
    this.commonDates = commonDates;
    return this;
  }

  public Story addCommonDatesItem(StoryCommonDates commonDatesItem) {
    if (this.commonDates == null) {
      this.commonDates = new ArrayList<StoryCommonDates>();
    }
    this.commonDates.add(commonDatesItem);
    return this;
  }

   /**
   * Get commonDates
   * @return commonDates
  **/
  @Schema(description = "")
  public List<StoryCommonDates> getCommonDates() {
    return commonDates;
  }

  public void setCommonDates(List<StoryCommonDates> commonDates) {
    this.commonDates = commonDates;
  }

  public Story socialScore(Double socialScore) {
    this.socialScore = socialScore;
    return this;
  }

   /**
   * Get socialScore
   * @return socialScore
  **/
  @Schema(description = "")
  public Double getSocialScore() {
    return socialScore;
  }

  public void setSocialScore(Double socialScore) {
    this.socialScore = socialScore;
  }

  public Story wgt(Integer wgt) {
    this.wgt = wgt;
    return this;
  }

   /**
   * Get wgt
   * @return wgt
  **/
  @Schema(description = "")
  public Integer getWgt() {
    return wgt;
  }

  public void setWgt(Integer wgt) {
    this.wgt = wgt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Story story = (Story) o;
    return Objects.equals(this.uri, story.uri) &&
        Objects.equals(this.articleCount, story.articleCount) &&
        Objects.equals(this.lang, story.lang) &&
        Objects.equals(this.avgCos, story.avgCos) &&
        Objects.equals(this.variance, story.variance) &&
        Objects.equals(this.eventUri, story.eventUri) &&
        Objects.equals(this.title, story.title) &&
        Objects.equals(this.isUserSetTitle, story.isUserSetTitle) &&
        Objects.equals(this.concepts, story.concepts) &&
        Objects.equals(this.location, story.location) &&
        Objects.equals(this.isUserSetLocation, story.isUserSetLocation) &&
        Objects.equals(this.categories, story.categories) &&
        Objects.equals(this.medoidArticle, story.medoidArticle) &&
        Objects.equals(this.storyDate, story.storyDate) &&
        Objects.equals(this.isUserSetDate, story.isUserSetDate) &&
        Objects.equals(this.extractedDate, story.extractedDate) &&
        Objects.equals(this.averageDate, story.averageDate) &&
        Objects.equals(this.images, story.images) &&
        Objects.equals(this.commonDates, story.commonDates) &&
        Objects.equals(this.socialScore, story.socialScore) &&
        Objects.equals(this.wgt, story.wgt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, articleCount, lang, avgCos, variance, eventUri, title, isUserSetTitle, concepts, location, isUserSetLocation, categories, medoidArticle, storyDate, isUserSetDate, extractedDate, averageDate, images, commonDates, socialScore, wgt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Story {\n");
    
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    articleCount: ").append(toIndentedString(articleCount)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    avgCos: ").append(toIndentedString(avgCos)).append("\n");
    sb.append("    variance: ").append(toIndentedString(variance)).append("\n");
    sb.append("    eventUri: ").append(toIndentedString(eventUri)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    isUserSetTitle: ").append(toIndentedString(isUserSetTitle)).append("\n");
    sb.append("    concepts: ").append(toIndentedString(concepts)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    isUserSetLocation: ").append(toIndentedString(isUserSetLocation)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    medoidArticle: ").append(toIndentedString(medoidArticle)).append("\n");
    sb.append("    storyDate: ").append(toIndentedString(storyDate)).append("\n");
    sb.append("    isUserSetDate: ").append(toIndentedString(isUserSetDate)).append("\n");
    sb.append("    extractedDate: ").append(toIndentedString(extractedDate)).append("\n");
    sb.append("    averageDate: ").append(toIndentedString(averageDate)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    commonDates: ").append(toIndentedString(commonDates)).append("\n");
    sb.append("    socialScore: ").append(toIndentedString(socialScore)).append("\n");
    sb.append("    wgt: ").append(toIndentedString(wgt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
