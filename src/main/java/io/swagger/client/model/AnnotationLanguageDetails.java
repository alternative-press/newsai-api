/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AnnotationLanguageCandidate;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AnnotationLanguageDetails
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-03T18:38:48.218840542Z[GMT]")

public class AnnotationLanguageDetails {
  @SerializedName("topLangNo")
  private Integer topLangNo = null;

  @SerializedName("topLangCode")
  private String topLangCode = null;

  @SerializedName("candidates")
  private List<AnnotationLanguageCandidate> candidates = null;

  @SerializedName("textBytes")
  private Integer textBytes = null;

  @SerializedName("validPrefBytes")
  private Integer validPrefBytes = null;

  @SerializedName("isReliable")
  private Boolean isReliable = null;

  @SerializedName("chunks")
  private List<String> chunks = null;

  public AnnotationLanguageDetails topLangNo(Integer topLangNo) {
    this.topLangNo = topLangNo;
    return this;
  }

   /**
   * Get topLangNo
   * @return topLangNo
  **/
  @Schema(description = "")
  public Integer getTopLangNo() {
    return topLangNo;
  }

  public void setTopLangNo(Integer topLangNo) {
    this.topLangNo = topLangNo;
  }

  public AnnotationLanguageDetails topLangCode(String topLangCode) {
    this.topLangCode = topLangCode;
    return this;
  }

   /**
   * Get topLangCode
   * @return topLangCode
  **/
  @Schema(description = "")
  public String getTopLangCode() {
    return topLangCode;
  }

  public void setTopLangCode(String topLangCode) {
    this.topLangCode = topLangCode;
  }

  public AnnotationLanguageDetails candidates(List<AnnotationLanguageCandidate> candidates) {
    this.candidates = candidates;
    return this;
  }

  public AnnotationLanguageDetails addCandidatesItem(AnnotationLanguageCandidate candidatesItem) {
    if (this.candidates == null) {
      this.candidates = new ArrayList<AnnotationLanguageCandidate>();
    }
    this.candidates.add(candidatesItem);
    return this;
  }

   /**
   * Get candidates
   * @return candidates
  **/
  @Schema(description = "")
  public List<AnnotationLanguageCandidate> getCandidates() {
    return candidates;
  }

  public void setCandidates(List<AnnotationLanguageCandidate> candidates) {
    this.candidates = candidates;
  }

  public AnnotationLanguageDetails textBytes(Integer textBytes) {
    this.textBytes = textBytes;
    return this;
  }

   /**
   * Get textBytes
   * @return textBytes
  **/
  @Schema(description = "")
  public Integer getTextBytes() {
    return textBytes;
  }

  public void setTextBytes(Integer textBytes) {
    this.textBytes = textBytes;
  }

  public AnnotationLanguageDetails validPrefBytes(Integer validPrefBytes) {
    this.validPrefBytes = validPrefBytes;
    return this;
  }

   /**
   * Get validPrefBytes
   * @return validPrefBytes
  **/
  @Schema(description = "")
  public Integer getValidPrefBytes() {
    return validPrefBytes;
  }

  public void setValidPrefBytes(Integer validPrefBytes) {
    this.validPrefBytes = validPrefBytes;
  }

  public AnnotationLanguageDetails isReliable(Boolean isReliable) {
    this.isReliable = isReliable;
    return this;
  }

   /**
   * Get isReliable
   * @return isReliable
  **/
  @Schema(description = "")
  public Boolean isIsReliable() {
    return isReliable;
  }

  public void setIsReliable(Boolean isReliable) {
    this.isReliable = isReliable;
  }

  public AnnotationLanguageDetails chunks(List<String> chunks) {
    this.chunks = chunks;
    return this;
  }

  public AnnotationLanguageDetails addChunksItem(String chunksItem) {
    if (this.chunks == null) {
      this.chunks = new ArrayList<String>();
    }
    this.chunks.add(chunksItem);
    return this;
  }

   /**
   * Get chunks
   * @return chunks
  **/
  @Schema(description = "")
  public List<String> getChunks() {
    return chunks;
  }

  public void setChunks(List<String> chunks) {
    this.chunks = chunks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnnotationLanguageDetails annotationLanguageDetails = (AnnotationLanguageDetails) o;
    return Objects.equals(this.topLangNo, annotationLanguageDetails.topLangNo) &&
        Objects.equals(this.topLangCode, annotationLanguageDetails.topLangCode) &&
        Objects.equals(this.candidates, annotationLanguageDetails.candidates) &&
        Objects.equals(this.textBytes, annotationLanguageDetails.textBytes) &&
        Objects.equals(this.validPrefBytes, annotationLanguageDetails.validPrefBytes) &&
        Objects.equals(this.isReliable, annotationLanguageDetails.isReliable) &&
        Objects.equals(this.chunks, annotationLanguageDetails.chunks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(topLangNo, topLangCode, candidates, textBytes, validPrefBytes, isReliable, chunks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnnotationLanguageDetails {\n");
    
    sb.append("    topLangNo: ").append(toIndentedString(topLangNo)).append("\n");
    sb.append("    topLangCode: ").append(toIndentedString(topLangCode)).append("\n");
    sb.append("    candidates: ").append(toIndentedString(candidates)).append("\n");
    sb.append("    textBytes: ").append(toIndentedString(textBytes)).append("\n");
    sb.append("    validPrefBytes: ").append(toIndentedString(validPrefBytes)).append("\n");
    sb.append("    isReliable: ").append(toIndentedString(isReliable)).append("\n");
    sb.append("    chunks: ").append(toIndentedString(chunks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
