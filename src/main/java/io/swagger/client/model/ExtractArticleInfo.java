/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ExtractArticleInfoObject;
import io.swagger.client.model.ExtractArticleInfoSource;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ExtractArticleInfo
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-03T18:38:48.218840542Z[GMT]")

public class ExtractArticleInfo {
  @SerializedName("title")
  private String title = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("links")
  private List<ExtractArticleInfoObject> links = null;

  @SerializedName("videos")
  private List<ExtractArticleInfoObject> videos = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("time")
  private String time = null;

  @SerializedName("datetime")
  private String datetime = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("keywords")
  private List<String> keywords = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("authors")
  private List<String> authors = null;

  @SerializedName("twitterSite")
  private String twitterSite = null;

  @SerializedName("twitterSiteId")
  private String twitterSiteId = null;

  @SerializedName("fbSourceUrl")
  private String fbSourceUrl = null;

  @SerializedName("fbAuthorUrl")
  private String fbAuthorUrl = null;

  @SerializedName("fbPages")
  private List<String> fbPages = null;

  @SerializedName("source")
  private ExtractArticleInfoSource source = null;

  @SerializedName("url")
  private String url = null;

  public ExtractArticleInfo title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ExtractArticleInfo body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public ExtractArticleInfo links(List<ExtractArticleInfoObject> links) {
    this.links = links;
    return this;
  }

  public ExtractArticleInfo addLinksItem(ExtractArticleInfoObject linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<ExtractArticleInfoObject>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<ExtractArticleInfoObject> getLinks() {
    return links;
  }

  public void setLinks(List<ExtractArticleInfoObject> links) {
    this.links = links;
  }

  public ExtractArticleInfo videos(List<ExtractArticleInfoObject> videos) {
    this.videos = videos;
    return this;
  }

  public ExtractArticleInfo addVideosItem(ExtractArticleInfoObject videosItem) {
    if (this.videos == null) {
      this.videos = new ArrayList<ExtractArticleInfoObject>();
    }
    this.videos.add(videosItem);
    return this;
  }

   /**
   * Get videos
   * @return videos
  **/
  @Schema(description = "")
  public List<ExtractArticleInfoObject> getVideos() {
    return videos;
  }

  public void setVideos(List<ExtractArticleInfoObject> videos) {
    this.videos = videos;
  }

  public ExtractArticleInfo date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public ExtractArticleInfo time(String time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @Schema(description = "")
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }

  public ExtractArticleInfo datetime(String datetime) {
    this.datetime = datetime;
    return this;
  }

   /**
   * Get datetime
   * @return datetime
  **/
  @Schema(description = "")
  public String getDatetime() {
    return datetime;
  }

  public void setDatetime(String datetime) {
    this.datetime = datetime;
  }

  public ExtractArticleInfo image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public ExtractArticleInfo keywords(List<String> keywords) {
    this.keywords = keywords;
    return this;
  }

  public ExtractArticleInfo addKeywordsItem(String keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<String>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Get keywords
   * @return keywords
  **/
  @Schema(description = "")
  public List<String> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<String> keywords) {
    this.keywords = keywords;
  }

  public ExtractArticleInfo description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ExtractArticleInfo authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public ExtractArticleInfo addAuthorsItem(String authorsItem) {
    if (this.authors == null) {
      this.authors = new ArrayList<String>();
    }
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * Get authors
   * @return authors
  **/
  @Schema(description = "")
  public List<String> getAuthors() {
    return authors;
  }

  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }

  public ExtractArticleInfo twitterSite(String twitterSite) {
    this.twitterSite = twitterSite;
    return this;
  }

   /**
   * Get twitterSite
   * @return twitterSite
  **/
  @Schema(description = "")
  public String getTwitterSite() {
    return twitterSite;
  }

  public void setTwitterSite(String twitterSite) {
    this.twitterSite = twitterSite;
  }

  public ExtractArticleInfo twitterSiteId(String twitterSiteId) {
    this.twitterSiteId = twitterSiteId;
    return this;
  }

   /**
   * Get twitterSiteId
   * @return twitterSiteId
  **/
  @Schema(description = "")
  public String getTwitterSiteId() {
    return twitterSiteId;
  }

  public void setTwitterSiteId(String twitterSiteId) {
    this.twitterSiteId = twitterSiteId;
  }

  public ExtractArticleInfo fbSourceUrl(String fbSourceUrl) {
    this.fbSourceUrl = fbSourceUrl;
    return this;
  }

   /**
   * Get fbSourceUrl
   * @return fbSourceUrl
  **/
  @Schema(description = "")
  public String getFbSourceUrl() {
    return fbSourceUrl;
  }

  public void setFbSourceUrl(String fbSourceUrl) {
    this.fbSourceUrl = fbSourceUrl;
  }

  public ExtractArticleInfo fbAuthorUrl(String fbAuthorUrl) {
    this.fbAuthorUrl = fbAuthorUrl;
    return this;
  }

   /**
   * Get fbAuthorUrl
   * @return fbAuthorUrl
  **/
  @Schema(description = "")
  public String getFbAuthorUrl() {
    return fbAuthorUrl;
  }

  public void setFbAuthorUrl(String fbAuthorUrl) {
    this.fbAuthorUrl = fbAuthorUrl;
  }

  public ExtractArticleInfo fbPages(List<String> fbPages) {
    this.fbPages = fbPages;
    return this;
  }

  public ExtractArticleInfo addFbPagesItem(String fbPagesItem) {
    if (this.fbPages == null) {
      this.fbPages = new ArrayList<String>();
    }
    this.fbPages.add(fbPagesItem);
    return this;
  }

   /**
   * Get fbPages
   * @return fbPages
  **/
  @Schema(description = "")
  public List<String> getFbPages() {
    return fbPages;
  }

  public void setFbPages(List<String> fbPages) {
    this.fbPages = fbPages;
  }

  public ExtractArticleInfo source(ExtractArticleInfoSource source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public ExtractArticleInfoSource getSource() {
    return source;
  }

  public void setSource(ExtractArticleInfoSource source) {
    this.source = source;
  }

  public ExtractArticleInfo url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtractArticleInfo extractArticleInfo = (ExtractArticleInfo) o;
    return Objects.equals(this.title, extractArticleInfo.title) &&
        Objects.equals(this.body, extractArticleInfo.body) &&
        Objects.equals(this.links, extractArticleInfo.links) &&
        Objects.equals(this.videos, extractArticleInfo.videos) &&
        Objects.equals(this.date, extractArticleInfo.date) &&
        Objects.equals(this.time, extractArticleInfo.time) &&
        Objects.equals(this.datetime, extractArticleInfo.datetime) &&
        Objects.equals(this.image, extractArticleInfo.image) &&
        Objects.equals(this.keywords, extractArticleInfo.keywords) &&
        Objects.equals(this.description, extractArticleInfo.description) &&
        Objects.equals(this.authors, extractArticleInfo.authors) &&
        Objects.equals(this.twitterSite, extractArticleInfo.twitterSite) &&
        Objects.equals(this.twitterSiteId, extractArticleInfo.twitterSiteId) &&
        Objects.equals(this.fbSourceUrl, extractArticleInfo.fbSourceUrl) &&
        Objects.equals(this.fbAuthorUrl, extractArticleInfo.fbAuthorUrl) &&
        Objects.equals(this.fbPages, extractArticleInfo.fbPages) &&
        Objects.equals(this.source, extractArticleInfo.source) &&
        Objects.equals(this.url, extractArticleInfo.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, body, links, videos, date, time, datetime, image, keywords, description, authors, twitterSite, twitterSiteId, fbSourceUrl, fbAuthorUrl, fbPages, source, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtractArticleInfo {\n");
    
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    videos: ").append(toIndentedString(videos)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    datetime: ").append(toIndentedString(datetime)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    twitterSite: ").append(toIndentedString(twitterSite)).append("\n");
    sb.append("    twitterSiteId: ").append(toIndentedString(twitterSiteId)).append("\n");
    sb.append("    fbSourceUrl: ").append(toIndentedString(fbSourceUrl)).append("\n");
    sb.append("    fbAuthorUrl: ").append(toIndentedString(fbAuthorUrl)).append("\n");
    sb.append("    fbPages: ").append(toIndentedString(fbPages)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
