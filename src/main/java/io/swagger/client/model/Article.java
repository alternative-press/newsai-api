/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ArticleExtractedDates;
import io.swagger.client.model.ArticleShares;
import io.swagger.client.model.CategoryTag;
import io.swagger.client.model.Concept;
import io.swagger.client.model.Location;
import io.swagger.client.model.Source;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Article
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-03T18:38:48.218840542Z[GMT]")

public class Article {
  @SerializedName("uri")
  private String uri = null;

  @SerializedName("lang")
  private String lang = null;

  @SerializedName("isDuplicate")
  private Boolean isDuplicate = null;

  @SerializedName("date")
  private String date = null;

  @SerializedName("time")
  private String time = null;

  @SerializedName("dateTime")
  private String dateTime = null;

  @SerializedName("sim")
  private Double sim = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("source")
  private Source source = null;

  @SerializedName("concepts")
  private List<Concept> concepts = null;

  @SerializedName("categories")
  private List<CategoryTag> categories = null;

  @SerializedName("links")
  private List<String> links = null;

  @SerializedName("videos")
  private List<String> videos = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("duplicateList")
  private List<String> duplicateList = null;

  @SerializedName("originalArticle")
  private String originalArticle = null;

  @SerializedName("eventUri")
  private String eventUri = null;

  @SerializedName("location")
  private Location location = null;

  @SerializedName("extractedDates")
  private List<ArticleExtractedDates> extractedDates = null;

  @SerializedName("shares")
  private ArticleShares shares = null;

  @SerializedName("wgt")
  private Integer wgt = null;

  public Article uri(String uri) {
    this.uri = uri;
    return this;
  }

   /**
   * Get uri
   * @return uri
  **/
  @Schema(description = "")
  public String getUri() {
    return uri;
  }

  public void setUri(String uri) {
    this.uri = uri;
  }

  public Article lang(String lang) {
    this.lang = lang;
    return this;
  }

   /**
   * Get lang
   * @return lang
  **/
  @Schema(description = "")
  public String getLang() {
    return lang;
  }

  public void setLang(String lang) {
    this.lang = lang;
  }

  public Article isDuplicate(Boolean isDuplicate) {
    this.isDuplicate = isDuplicate;
    return this;
  }

   /**
   * Get isDuplicate
   * @return isDuplicate
  **/
  @Schema(description = "")
  public Boolean isIsDuplicate() {
    return isDuplicate;
  }

  public void setIsDuplicate(Boolean isDuplicate) {
    this.isDuplicate = isDuplicate;
  }

  public Article date(String date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @Schema(description = "")
  public String getDate() {
    return date;
  }

  public void setDate(String date) {
    this.date = date;
  }

  public Article time(String time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @Schema(description = "")
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }

  public Article dateTime(String dateTime) {
    this.dateTime = dateTime;
    return this;
  }

   /**
   * Get dateTime
   * @return dateTime
  **/
  @Schema(description = "")
  public String getDateTime() {
    return dateTime;
  }

  public void setDateTime(String dateTime) {
    this.dateTime = dateTime;
  }

  public Article sim(Double sim) {
    this.sim = sim;
    return this;
  }

   /**
   * Get sim
   * @return sim
  **/
  @Schema(description = "")
  public Double getSim() {
    return sim;
  }

  public void setSim(Double sim) {
    this.sim = sim;
  }

  public Article url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Article title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Article body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @Schema(description = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public Article source(Source source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @Schema(description = "")
  public Source getSource() {
    return source;
  }

  public void setSource(Source source) {
    this.source = source;
  }

  public Article concepts(List<Concept> concepts) {
    this.concepts = concepts;
    return this;
  }

  public Article addConceptsItem(Concept conceptsItem) {
    if (this.concepts == null) {
      this.concepts = new ArrayList<Concept>();
    }
    this.concepts.add(conceptsItem);
    return this;
  }

   /**
   * Get concepts
   * @return concepts
  **/
  @Schema(description = "")
  public List<Concept> getConcepts() {
    return concepts;
  }

  public void setConcepts(List<Concept> concepts) {
    this.concepts = concepts;
  }

  public Article categories(List<CategoryTag> categories) {
    this.categories = categories;
    return this;
  }

  public Article addCategoriesItem(CategoryTag categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<CategoryTag>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @Schema(description = "")
  public List<CategoryTag> getCategories() {
    return categories;
  }

  public void setCategories(List<CategoryTag> categories) {
    this.categories = categories;
  }

  public Article links(List<String> links) {
    this.links = links;
    return this;
  }

  public Article addLinksItem(String linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<String>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<String> getLinks() {
    return links;
  }

  public void setLinks(List<String> links) {
    this.links = links;
  }

  public Article videos(List<String> videos) {
    this.videos = videos;
    return this;
  }

  public Article addVideosItem(String videosItem) {
    if (this.videos == null) {
      this.videos = new ArrayList<String>();
    }
    this.videos.add(videosItem);
    return this;
  }

   /**
   * Get videos
   * @return videos
  **/
  @Schema(description = "")
  public List<String> getVideos() {
    return videos;
  }

  public void setVideos(List<String> videos) {
    this.videos = videos;
  }

  public Article image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @Schema(description = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public Article duplicateList(List<String> duplicateList) {
    this.duplicateList = duplicateList;
    return this;
  }

  public Article addDuplicateListItem(String duplicateListItem) {
    if (this.duplicateList == null) {
      this.duplicateList = new ArrayList<String>();
    }
    this.duplicateList.add(duplicateListItem);
    return this;
  }

   /**
   * Get duplicateList
   * @return duplicateList
  **/
  @Schema(description = "")
  public List<String> getDuplicateList() {
    return duplicateList;
  }

  public void setDuplicateList(List<String> duplicateList) {
    this.duplicateList = duplicateList;
  }

  public Article originalArticle(String originalArticle) {
    this.originalArticle = originalArticle;
    return this;
  }

   /**
   * Get originalArticle
   * @return originalArticle
  **/
  @Schema(description = "")
  public String getOriginalArticle() {
    return originalArticle;
  }

  public void setOriginalArticle(String originalArticle) {
    this.originalArticle = originalArticle;
  }

  public Article eventUri(String eventUri) {
    this.eventUri = eventUri;
    return this;
  }

   /**
   * Get eventUri
   * @return eventUri
  **/
  @Schema(description = "")
  public String getEventUri() {
    return eventUri;
  }

  public void setEventUri(String eventUri) {
    this.eventUri = eventUri;
  }

  public Article location(Location location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @Schema(description = "")
  public Location getLocation() {
    return location;
  }

  public void setLocation(Location location) {
    this.location = location;
  }

  public Article extractedDates(List<ArticleExtractedDates> extractedDates) {
    this.extractedDates = extractedDates;
    return this;
  }

  public Article addExtractedDatesItem(ArticleExtractedDates extractedDatesItem) {
    if (this.extractedDates == null) {
      this.extractedDates = new ArrayList<ArticleExtractedDates>();
    }
    this.extractedDates.add(extractedDatesItem);
    return this;
  }

   /**
   * Get extractedDates
   * @return extractedDates
  **/
  @Schema(description = "")
  public List<ArticleExtractedDates> getExtractedDates() {
    return extractedDates;
  }

  public void setExtractedDates(List<ArticleExtractedDates> extractedDates) {
    this.extractedDates = extractedDates;
  }

  public Article shares(ArticleShares shares) {
    this.shares = shares;
    return this;
  }

   /**
   * Get shares
   * @return shares
  **/
  @Schema(description = "")
  public ArticleShares getShares() {
    return shares;
  }

  public void setShares(ArticleShares shares) {
    this.shares = shares;
  }

  public Article wgt(Integer wgt) {
    this.wgt = wgt;
    return this;
  }

   /**
   * Get wgt
   * @return wgt
  **/
  @Schema(description = "")
  public Integer getWgt() {
    return wgt;
  }

  public void setWgt(Integer wgt) {
    this.wgt = wgt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Article article = (Article) o;
    return Objects.equals(this.uri, article.uri) &&
        Objects.equals(this.lang, article.lang) &&
        Objects.equals(this.isDuplicate, article.isDuplicate) &&
        Objects.equals(this.date, article.date) &&
        Objects.equals(this.time, article.time) &&
        Objects.equals(this.dateTime, article.dateTime) &&
        Objects.equals(this.sim, article.sim) &&
        Objects.equals(this.url, article.url) &&
        Objects.equals(this.title, article.title) &&
        Objects.equals(this.body, article.body) &&
        Objects.equals(this.source, article.source) &&
        Objects.equals(this.concepts, article.concepts) &&
        Objects.equals(this.categories, article.categories) &&
        Objects.equals(this.links, article.links) &&
        Objects.equals(this.videos, article.videos) &&
        Objects.equals(this.image, article.image) &&
        Objects.equals(this.duplicateList, article.duplicateList) &&
        Objects.equals(this.originalArticle, article.originalArticle) &&
        Objects.equals(this.eventUri, article.eventUri) &&
        Objects.equals(this.location, article.location) &&
        Objects.equals(this.extractedDates, article.extractedDates) &&
        Objects.equals(this.shares, article.shares) &&
        Objects.equals(this.wgt, article.wgt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uri, lang, isDuplicate, date, time, dateTime, sim, url, title, body, source, concepts, categories, links, videos, image, duplicateList, originalArticle, eventUri, location, extractedDates, shares, wgt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Article {\n");
    
    sb.append("    uri: ").append(toIndentedString(uri)).append("\n");
    sb.append("    lang: ").append(toIndentedString(lang)).append("\n");
    sb.append("    isDuplicate: ").append(toIndentedString(isDuplicate)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    sim: ").append(toIndentedString(sim)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    concepts: ").append(toIndentedString(concepts)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    videos: ").append(toIndentedString(videos)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    duplicateList: ").append(toIndentedString(duplicateList)).append("\n");
    sb.append("    originalArticle: ").append(toIndentedString(originalArticle)).append("\n");
    sb.append("    eventUri: ").append(toIndentedString(eventUri)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    extractedDates: ").append(toIndentedString(extractedDates)).append("\n");
    sb.append("    shares: ").append(toIndentedString(shares)).append("\n");
    sb.append("    wgt: ").append(toIndentedString(wgt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
