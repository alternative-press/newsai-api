/*
 * Event Registry REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 8.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AnnotationAnnotations;
import io.swagger.client.model.AnnotationLanguageDetails;
import io.swagger.client.model.AnnotationSettings;
import io.swagger.client.model.AnnotationStats;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Annotation
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-03T18:38:48.218840542Z[GMT]")

public class Annotation {
  @SerializedName("annotations")
  private List<AnnotationAnnotations> annotations = null;

  @SerializedName("spaces")
  private List<String> spaces = null;

  @SerializedName("words")
  private List<String> words = null;

  @SerializedName("normWords")
  private List<String> normWords = null;

  @SerializedName("ranges")
  private List<Integer> ranges = null;

  @SerializedName("minPageRank")
  private Integer minPageRank = null;

  @SerializedName("maxDfThreshold")
  private Integer maxDfThreshold = null;

  @SerializedName("altLabelSetsUsed")
  private List<String> altLabelSetsUsed = null;

  @SerializedName("linkSourcesAvailable")
  private Boolean linkSourcesAvailable = null;

  @SerializedName("verbs")
  private List<AnnotationStats> verbs = null;

  @SerializedName("nouns")
  private List<AnnotationStats> nouns = null;

  @SerializedName("adjectives")
  private List<AnnotationStats> adjectives = null;

  @SerializedName("adverbs")
  private List<AnnotationStats> adverbs = null;

  @SerializedName("timeTotalMs")
  private Integer timeTotalMs = null;

  @SerializedName("timeAnnotationMs")
  private Integer timeAnnotationMs = null;

  @SerializedName("timeBuildJsonMs")
  private Integer timeBuildJsonMs = null;

  @SerializedName("incIdxTimestampUtc")
  private String incIdxTimestampUtc = null;

  @SerializedName("fnRegIdx")
  private String fnRegIdx = null;

  @SerializedName("fnWikiData")
  private String fnWikiData = null;

  @SerializedName("settings")
  private AnnotationSettings settings = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("languageAutodetectInfo")
  private String languageAutodetectInfo = null;

  @SerializedName("languageAutodetectDetails")
  private AnnotationLanguageDetails languageAutodetectDetails = null;

  public Annotation annotations(List<AnnotationAnnotations> annotations) {
    this.annotations = annotations;
    return this;
  }

  public Annotation addAnnotationsItem(AnnotationAnnotations annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new ArrayList<AnnotationAnnotations>();
    }
    this.annotations.add(annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @Schema(description = "")
  public List<AnnotationAnnotations> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(List<AnnotationAnnotations> annotations) {
    this.annotations = annotations;
  }

  public Annotation spaces(List<String> spaces) {
    this.spaces = spaces;
    return this;
  }

  public Annotation addSpacesItem(String spacesItem) {
    if (this.spaces == null) {
      this.spaces = new ArrayList<String>();
    }
    this.spaces.add(spacesItem);
    return this;
  }

   /**
   * Get spaces
   * @return spaces
  **/
  @Schema(description = "")
  public List<String> getSpaces() {
    return spaces;
  }

  public void setSpaces(List<String> spaces) {
    this.spaces = spaces;
  }

  public Annotation words(List<String> words) {
    this.words = words;
    return this;
  }

  public Annotation addWordsItem(String wordsItem) {
    if (this.words == null) {
      this.words = new ArrayList<String>();
    }
    this.words.add(wordsItem);
    return this;
  }

   /**
   * Get words
   * @return words
  **/
  @Schema(description = "")
  public List<String> getWords() {
    return words;
  }

  public void setWords(List<String> words) {
    this.words = words;
  }

  public Annotation normWords(List<String> normWords) {
    this.normWords = normWords;
    return this;
  }

  public Annotation addNormWordsItem(String normWordsItem) {
    if (this.normWords == null) {
      this.normWords = new ArrayList<String>();
    }
    this.normWords.add(normWordsItem);
    return this;
  }

   /**
   * Get normWords
   * @return normWords
  **/
  @Schema(description = "")
  public List<String> getNormWords() {
    return normWords;
  }

  public void setNormWords(List<String> normWords) {
    this.normWords = normWords;
  }

  public Annotation ranges(List<Integer> ranges) {
    this.ranges = ranges;
    return this;
  }

  public Annotation addRangesItem(Integer rangesItem) {
    if (this.ranges == null) {
      this.ranges = new ArrayList<Integer>();
    }
    this.ranges.add(rangesItem);
    return this;
  }

   /**
   * Get ranges
   * @return ranges
  **/
  @Schema(description = "")
  public List<Integer> getRanges() {
    return ranges;
  }

  public void setRanges(List<Integer> ranges) {
    this.ranges = ranges;
  }

  public Annotation minPageRank(Integer minPageRank) {
    this.minPageRank = minPageRank;
    return this;
  }

   /**
   * Get minPageRank
   * @return minPageRank
  **/
  @Schema(description = "")
  public Integer getMinPageRank() {
    return minPageRank;
  }

  public void setMinPageRank(Integer minPageRank) {
    this.minPageRank = minPageRank;
  }

  public Annotation maxDfThreshold(Integer maxDfThreshold) {
    this.maxDfThreshold = maxDfThreshold;
    return this;
  }

   /**
   * Get maxDfThreshold
   * @return maxDfThreshold
  **/
  @Schema(description = "")
  public Integer getMaxDfThreshold() {
    return maxDfThreshold;
  }

  public void setMaxDfThreshold(Integer maxDfThreshold) {
    this.maxDfThreshold = maxDfThreshold;
  }

  public Annotation altLabelSetsUsed(List<String> altLabelSetsUsed) {
    this.altLabelSetsUsed = altLabelSetsUsed;
    return this;
  }

  public Annotation addAltLabelSetsUsedItem(String altLabelSetsUsedItem) {
    if (this.altLabelSetsUsed == null) {
      this.altLabelSetsUsed = new ArrayList<String>();
    }
    this.altLabelSetsUsed.add(altLabelSetsUsedItem);
    return this;
  }

   /**
   * Get altLabelSetsUsed
   * @return altLabelSetsUsed
  **/
  @Schema(description = "")
  public List<String> getAltLabelSetsUsed() {
    return altLabelSetsUsed;
  }

  public void setAltLabelSetsUsed(List<String> altLabelSetsUsed) {
    this.altLabelSetsUsed = altLabelSetsUsed;
  }

  public Annotation linkSourcesAvailable(Boolean linkSourcesAvailable) {
    this.linkSourcesAvailable = linkSourcesAvailable;
    return this;
  }

   /**
   * Get linkSourcesAvailable
   * @return linkSourcesAvailable
  **/
  @Schema(description = "")
  public Boolean isLinkSourcesAvailable() {
    return linkSourcesAvailable;
  }

  public void setLinkSourcesAvailable(Boolean linkSourcesAvailable) {
    this.linkSourcesAvailable = linkSourcesAvailable;
  }

  public Annotation verbs(List<AnnotationStats> verbs) {
    this.verbs = verbs;
    return this;
  }

  public Annotation addVerbsItem(AnnotationStats verbsItem) {
    if (this.verbs == null) {
      this.verbs = new ArrayList<AnnotationStats>();
    }
    this.verbs.add(verbsItem);
    return this;
  }

   /**
   * Get verbs
   * @return verbs
  **/
  @Schema(description = "")
  public List<AnnotationStats> getVerbs() {
    return verbs;
  }

  public void setVerbs(List<AnnotationStats> verbs) {
    this.verbs = verbs;
  }

  public Annotation nouns(List<AnnotationStats> nouns) {
    this.nouns = nouns;
    return this;
  }

  public Annotation addNounsItem(AnnotationStats nounsItem) {
    if (this.nouns == null) {
      this.nouns = new ArrayList<AnnotationStats>();
    }
    this.nouns.add(nounsItem);
    return this;
  }

   /**
   * Get nouns
   * @return nouns
  **/
  @Schema(description = "")
  public List<AnnotationStats> getNouns() {
    return nouns;
  }

  public void setNouns(List<AnnotationStats> nouns) {
    this.nouns = nouns;
  }

  public Annotation adjectives(List<AnnotationStats> adjectives) {
    this.adjectives = adjectives;
    return this;
  }

  public Annotation addAdjectivesItem(AnnotationStats adjectivesItem) {
    if (this.adjectives == null) {
      this.adjectives = new ArrayList<AnnotationStats>();
    }
    this.adjectives.add(adjectivesItem);
    return this;
  }

   /**
   * Get adjectives
   * @return adjectives
  **/
  @Schema(description = "")
  public List<AnnotationStats> getAdjectives() {
    return adjectives;
  }

  public void setAdjectives(List<AnnotationStats> adjectives) {
    this.adjectives = adjectives;
  }

  public Annotation adverbs(List<AnnotationStats> adverbs) {
    this.adverbs = adverbs;
    return this;
  }

  public Annotation addAdverbsItem(AnnotationStats adverbsItem) {
    if (this.adverbs == null) {
      this.adverbs = new ArrayList<AnnotationStats>();
    }
    this.adverbs.add(adverbsItem);
    return this;
  }

   /**
   * Get adverbs
   * @return adverbs
  **/
  @Schema(description = "")
  public List<AnnotationStats> getAdverbs() {
    return adverbs;
  }

  public void setAdverbs(List<AnnotationStats> adverbs) {
    this.adverbs = adverbs;
  }

  public Annotation timeTotalMs(Integer timeTotalMs) {
    this.timeTotalMs = timeTotalMs;
    return this;
  }

   /**
   * Get timeTotalMs
   * @return timeTotalMs
  **/
  @Schema(description = "")
  public Integer getTimeTotalMs() {
    return timeTotalMs;
  }

  public void setTimeTotalMs(Integer timeTotalMs) {
    this.timeTotalMs = timeTotalMs;
  }

  public Annotation timeAnnotationMs(Integer timeAnnotationMs) {
    this.timeAnnotationMs = timeAnnotationMs;
    return this;
  }

   /**
   * Get timeAnnotationMs
   * @return timeAnnotationMs
  **/
  @Schema(description = "")
  public Integer getTimeAnnotationMs() {
    return timeAnnotationMs;
  }

  public void setTimeAnnotationMs(Integer timeAnnotationMs) {
    this.timeAnnotationMs = timeAnnotationMs;
  }

  public Annotation timeBuildJsonMs(Integer timeBuildJsonMs) {
    this.timeBuildJsonMs = timeBuildJsonMs;
    return this;
  }

   /**
   * Get timeBuildJsonMs
   * @return timeBuildJsonMs
  **/
  @Schema(description = "")
  public Integer getTimeBuildJsonMs() {
    return timeBuildJsonMs;
  }

  public void setTimeBuildJsonMs(Integer timeBuildJsonMs) {
    this.timeBuildJsonMs = timeBuildJsonMs;
  }

  public Annotation incIdxTimestampUtc(String incIdxTimestampUtc) {
    this.incIdxTimestampUtc = incIdxTimestampUtc;
    return this;
  }

   /**
   * Get incIdxTimestampUtc
   * @return incIdxTimestampUtc
  **/
  @Schema(description = "")
  public String getIncIdxTimestampUtc() {
    return incIdxTimestampUtc;
  }

  public void setIncIdxTimestampUtc(String incIdxTimestampUtc) {
    this.incIdxTimestampUtc = incIdxTimestampUtc;
  }

  public Annotation fnRegIdx(String fnRegIdx) {
    this.fnRegIdx = fnRegIdx;
    return this;
  }

   /**
   * Get fnRegIdx
   * @return fnRegIdx
  **/
  @Schema(description = "")
  public String getFnRegIdx() {
    return fnRegIdx;
  }

  public void setFnRegIdx(String fnRegIdx) {
    this.fnRegIdx = fnRegIdx;
  }

  public Annotation fnWikiData(String fnWikiData) {
    this.fnWikiData = fnWikiData;
    return this;
  }

   /**
   * Get fnWikiData
   * @return fnWikiData
  **/
  @Schema(description = "")
  public String getFnWikiData() {
    return fnWikiData;
  }

  public void setFnWikiData(String fnWikiData) {
    this.fnWikiData = fnWikiData;
  }

  public Annotation settings(AnnotationSettings settings) {
    this.settings = settings;
    return this;
  }

   /**
   * Get settings
   * @return settings
  **/
  @Schema(description = "")
  public AnnotationSettings getSettings() {
    return settings;
  }

  public void setSettings(AnnotationSettings settings) {
    this.settings = settings;
  }

  public Annotation language(String language) {
    this.language = language;
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public Annotation languageAutodetectInfo(String languageAutodetectInfo) {
    this.languageAutodetectInfo = languageAutodetectInfo;
    return this;
  }

   /**
   * Get languageAutodetectInfo
   * @return languageAutodetectInfo
  **/
  @Schema(description = "")
  public String getLanguageAutodetectInfo() {
    return languageAutodetectInfo;
  }

  public void setLanguageAutodetectInfo(String languageAutodetectInfo) {
    this.languageAutodetectInfo = languageAutodetectInfo;
  }

  public Annotation languageAutodetectDetails(AnnotationLanguageDetails languageAutodetectDetails) {
    this.languageAutodetectDetails = languageAutodetectDetails;
    return this;
  }

   /**
   * Get languageAutodetectDetails
   * @return languageAutodetectDetails
  **/
  @Schema(description = "")
  public AnnotationLanguageDetails getLanguageAutodetectDetails() {
    return languageAutodetectDetails;
  }

  public void setLanguageAutodetectDetails(AnnotationLanguageDetails languageAutodetectDetails) {
    this.languageAutodetectDetails = languageAutodetectDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Annotation annotation = (Annotation) o;
    return Objects.equals(this.annotations, annotation.annotations) &&
        Objects.equals(this.spaces, annotation.spaces) &&
        Objects.equals(this.words, annotation.words) &&
        Objects.equals(this.normWords, annotation.normWords) &&
        Objects.equals(this.ranges, annotation.ranges) &&
        Objects.equals(this.minPageRank, annotation.minPageRank) &&
        Objects.equals(this.maxDfThreshold, annotation.maxDfThreshold) &&
        Objects.equals(this.altLabelSetsUsed, annotation.altLabelSetsUsed) &&
        Objects.equals(this.linkSourcesAvailable, annotation.linkSourcesAvailable) &&
        Objects.equals(this.verbs, annotation.verbs) &&
        Objects.equals(this.nouns, annotation.nouns) &&
        Objects.equals(this.adjectives, annotation.adjectives) &&
        Objects.equals(this.adverbs, annotation.adverbs) &&
        Objects.equals(this.timeTotalMs, annotation.timeTotalMs) &&
        Objects.equals(this.timeAnnotationMs, annotation.timeAnnotationMs) &&
        Objects.equals(this.timeBuildJsonMs, annotation.timeBuildJsonMs) &&
        Objects.equals(this.incIdxTimestampUtc, annotation.incIdxTimestampUtc) &&
        Objects.equals(this.fnRegIdx, annotation.fnRegIdx) &&
        Objects.equals(this.fnWikiData, annotation.fnWikiData) &&
        Objects.equals(this.settings, annotation.settings) &&
        Objects.equals(this.language, annotation.language) &&
        Objects.equals(this.languageAutodetectInfo, annotation.languageAutodetectInfo) &&
        Objects.equals(this.languageAutodetectDetails, annotation.languageAutodetectDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annotations, spaces, words, normWords, ranges, minPageRank, maxDfThreshold, altLabelSetsUsed, linkSourcesAvailable, verbs, nouns, adjectives, adverbs, timeTotalMs, timeAnnotationMs, timeBuildJsonMs, incIdxTimestampUtc, fnRegIdx, fnWikiData, settings, language, languageAutodetectInfo, languageAutodetectDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Annotation {\n");
    
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    spaces: ").append(toIndentedString(spaces)).append("\n");
    sb.append("    words: ").append(toIndentedString(words)).append("\n");
    sb.append("    normWords: ").append(toIndentedString(normWords)).append("\n");
    sb.append("    ranges: ").append(toIndentedString(ranges)).append("\n");
    sb.append("    minPageRank: ").append(toIndentedString(minPageRank)).append("\n");
    sb.append("    maxDfThreshold: ").append(toIndentedString(maxDfThreshold)).append("\n");
    sb.append("    altLabelSetsUsed: ").append(toIndentedString(altLabelSetsUsed)).append("\n");
    sb.append("    linkSourcesAvailable: ").append(toIndentedString(linkSourcesAvailable)).append("\n");
    sb.append("    verbs: ").append(toIndentedString(verbs)).append("\n");
    sb.append("    nouns: ").append(toIndentedString(nouns)).append("\n");
    sb.append("    adjectives: ").append(toIndentedString(adjectives)).append("\n");
    sb.append("    adverbs: ").append(toIndentedString(adverbs)).append("\n");
    sb.append("    timeTotalMs: ").append(toIndentedString(timeTotalMs)).append("\n");
    sb.append("    timeAnnotationMs: ").append(toIndentedString(timeAnnotationMs)).append("\n");
    sb.append("    timeBuildJsonMs: ").append(toIndentedString(timeBuildJsonMs)).append("\n");
    sb.append("    incIdxTimestampUtc: ").append(toIndentedString(incIdxTimestampUtc)).append("\n");
    sb.append("    fnRegIdx: ").append(toIndentedString(fnRegIdx)).append("\n");
    sb.append("    fnWikiData: ").append(toIndentedString(fnWikiData)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    languageAutodetectInfo: ").append(toIndentedString(languageAutodetectInfo)).append("\n");
    sb.append("    languageAutodetectDetails: ").append(toIndentedString(languageAutodetectDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
